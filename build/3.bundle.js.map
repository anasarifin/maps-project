{"version":3,"sources":["webpack:///./src/images/pin_red.png","webpack:///./src/images/pin_yellow.png","webpack:///./src/images/pin_green.png","webpack:///./src/images/pin_black.png","webpack:///./src/images/my_location.png","webpack:///./src/styles/MapsMobile.css?7c31","webpack:///./src/styles/MapsMobile.css","webpack:///./src/images/marker.png","webpack:///./src/pages/MapsMobile.tsx"],"names":["api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","AxiosLocation","AxiosCancelRequest","axios","AxiosDirection","center","lat","lng","titleCase","str","toLowerCase","split","map","word","replace","toUpperCase","join","MapComponent","googleMap","marker","circle","polygon","autoComplete","directionsService","directionsRenderer","mapRef","useRef","inputRef","bottomRef","radiusRef","useState","data","setData","status","setStatus","loading","setLoading","odpStatus","setOdpStatus","touchStart","setTouchStart","inputRadius","setInputRadius","radiusShow","setRadiusShow","bottomShow","setBottomShow","odpMarker","useEffect","googleScript","document","createElement","src","process","window","body","appendChild","addEventListener","google","maps","Map","current","zoom","clickableIcons","disableDefaultUI","gestureHandling","mapTypeControlOptions","position","ControlPosition","BOTTOM_CENTER","Marker","visible","icon","url","pin_marker","size","Size","origin","Point","anchor","places","Autocomplete","fields","types","componentRestrictions","country","bindTo","Circle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","Polygon","paths","DirectionsService","DirectionsRenderer","suppressMarkers","preserveViewport","mapEventListener","getLocation","show","x","setMap","panTo","setCenter","setRadius","parseFloat","value","then","resolve","provinsi","kabupaten","kecamatan","kelurahan","polygonLayer","shape","slice","setPath","kota","name","style","transition","bottom","getDirection","reject","isCancel","console","log","method","long","radius","auth","username","password","odpData","features","filter","attributes","portidlenumber","length","setZoom","dataset","panBy","forEach","pin","status_occ_add","pin_red","pin_yellow","pin_green","pin_black","infoWindow","InfoWindow","device_id","devicename","deviceportnumber","addListener","close","open","route","destination","travelMode","response","setDirections","alert","event","place","getPlace","geometry","location","viewport","fitBounds","setPosition","setVisible","e","latLng","className","height","innerHeight","ref","placeholder","my_location","alt","onClick","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","type","min","max","step","onChange","target","readOnly","display","data-show","onTouchStart","touches","clientY","onTouchMove","touchPos","changedTouches","touchStartEdge","onTouchEnd","Number"],"mappings":"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","file":"3.bundle.js","sourcesContent":["export default __webpack_public_path__ + \"src/images/pin_red.png\";","export default __webpack_public_path__ + \"src/images/pin_yellow.png\";","export default __webpack_public_path__ + \"src/images/pin_green.png\";","export default __webpack_public_path__ + \"src/images/pin_black.png\";","export default __webpack_public_path__ + \"src/images/my_location.png\";","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!./MapsMobile.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body {\\n\\toverscroll-behavior: contain;\\n\\toverflow: hidden;\\n}\\nimg:press {\\n\\toutline: none;\\n}\\n.map-page {\\n\\twidth: 100vw;\\n}\\n.map-container {\\n\\twidth: 100%;\\n\\theight: 100%;\\n}\\n.map-top {\\n\\tposition: fixed;\\n\\tdisplay: grid;\\n\\tgrid-template-columns: auto 50px;\\n\\ttop: 10px;\\n\\twidth: 95%;\\n\\tmax-width: 600px;\\n\\theight: 50px;\\n\\tbackground-color: white;\\n\\tborder-radius: 5px;\\n\\tleft: 50%;\\n\\ttransform: translate(-50%);\\n\\tbox-shadow: 0 2px 4px 2px rgba(0, 0, 0, 0.4);\\n}\\n.map-top-search {\\n\\toutline: none;\\n\\tpadding-left: 17px;\\n\\tborder: none;\\n\\tborder-radius: 5px;\\n}\\n.map-top-findme {\\n\\tjustify-self: center;\\n\\talign-self: center;\\n}\\n.map-radius-icon {\\n\\tposition: absolute;\\n\\tright: 10px;\\n\\ttop: 80px;\\n\\twidth: 40px;\\n\\theight: 40px;\\n\\tbackground-color: salmon;\\n\\tz-index: 2;\\n\\tborder-radius: 5px;\\n\\tbox-shadow: 0 2px 4px 2px rgba(0, 0, 0, 0.4);\\n}\\n.map-radius-con {\\n\\tposition: absolute;\\n\\tdisplay: grid;\\n\\tgrid-template-columns: 1fr;\\n\\tjustify-items: center;\\n\\tvertical-align: center;\\n\\ttop: 80px;\\n\\twidth: 95%;\\n\\tmax-width: 600px;\\n\\theight: 100px;\\n\\tfont-size: larger;\\n\\tfont-weight: bold;\\n\\tbackground-color: white;\\n\\tbox-sizing: border-box;\\n\\tpadding: 20px;\\n\\tborder-radius: 5px;\\n\\tleft: 50%;\\n\\ttransform: translate(-50%);\\n\\tbox-shadow: 0 2px 4px 2px rgba(0, 0, 0, 0.4);\\n\\tz-index: 4;\\n}\\n.map-radius-con input {\\n\\twidth: 80%;\\n}\\n.map-radius-bg {\\n\\tposition: fixed;\\n\\tleft: 0;\\n\\tright: 0;\\n\\ttop: 0;\\n\\tbottom: 0;\\n\\tz-index: 3;\\n}\\n.map-bottom {\\n\\tposition: fixed;\\n\\tbottom: 20px;\\n\\twidth: 100%;\\n\\theight: 200px;\\n\\tbackground-color: white;\\n\\tborder-radius: 15px 15px 0 0;\\n\\ttransform: translate3d(0, 100%, 0);\\n\\tpadding: 30px;\\n\\tbox-sizing: border-box;\\n\\tbox-shadow: 0 0 4px 4px rgba(0, 0, 0, 0.3);\\n}\\n.map-bottom-body {\\n\\twidth: 100%;\\n\\tmargin-bottom: 15px;\\n\\tbackground-color: #0288d1;\\n\\tborder-radius: 3px;\\n\\tpadding: 10px;\\n\\tbox-sizing: border-box;\\n\\tfont-size: larger;\\n\\tcolor: white;\\n}\\n.map-bottom-nopick {\\n\\tposition: absolute;\\n\\ttop: 50%;\\n\\tleft: 50%;\\n\\ttransform: translate(-50%, -50%);\\n\\ttext-align: center;\\n\\tbackground-color: white;\\n\\tcolor: black;\\n\\tfont-size: xx-large;\\n}\\n.map-bottom-odp {\\n\\ttext-align: center;\\n}\\n\\n.gm-style-cc {\\n\\tdisplay: none !important;\\n}\\n.gm-style a[href^=\\\"https://maps.google.com/maps\\\"]\\n{\\n\\tdisplay: none !important;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","export default __webpack_public_path__ + \"src/images/marker.png\";","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useRef, useEffect, TouchEvent } from \"react\";\nimport axios from \"axios\";\nimport AxiosCancelRequest from \"axios-cancel-request\";\nimport \"../styles/MapsMobile.css\";\n// Images\nimport pin_marker from \"../images/marker.png\";\nimport pin_red from \"../images/pin_red.png\";\nimport pin_yellow from \"../images/pin_yellow.png\";\nimport pin_green from \"../images/pin_green.png\";\nimport pin_black from \"../images/pin_black.png\";\nimport my_location from \"../images/my_location.png\";\n// -----\nconst AxiosLocation = AxiosCancelRequest(axios);\nconst AxiosDirection = AxiosCancelRequest(axios);\nconst center = {\n\tlat: -6.2088,\n\tlng: 106.8456,\n};\n\nfunction titleCase(str: String) {\n\treturn str\n\t\t.toLowerCase()\n\t\t.split(\" \")\n\t\t.map(function (word) {\n\t\t\treturn word.replace(word[0], word[0].toUpperCase());\n\t\t})\n\t\t.join(\" \");\n}\n\nconst MapComponent = () => {\n\tconst mapRef = useRef<HTMLDivElement>();\n\tconst inputRef = useRef<HTMLInputElement>();\n\tconst bottomRef = useRef<HTMLDivElement>();\n\tconst radiusRef = useRef<HTMLInputElement>();\n\tconst [data, setData] = useState(\"\");\n\tconst [status, setStatus] = useState(\"No location selected.\");\n\tconst [loading, setLoading] = useState(true);\n\tconst [odpStatus, setOdpStatus] = useState(\"\");\n\tconst [touchStart, setTouchStart] = useState(0);\n\tconst [inputRadius, setInputRadius] = useState(\"200\");\n\tconst [radiusShow, setRadiusShow] = useState(false);\n\tconst [bottomShow, setBottomShow] = useState(false);\n\n\t// Initialize an variables to call it later\n\tlet googleMap;\n\tlet marker;\n\tlet circle;\n\tlet polygon;\n\tlet autoComplete;\n\tlet odpMarker = [];\n\tlet directionsService;\n\tlet directionsRenderer;\n\n\tuseEffect(() => {\n\t\t// Create script element and call google maps api\n\t\tconst googleScript = document.createElement(\"script\");\n\t\tgoogleScript.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.GOOGLE_API}&libraries=places,geometry`;\n\t\twindow.document.body.appendChild(googleScript);\n\n\t\tgoogleScript.addEventListener(\"load\", async () => {\n\t\t\t// Maps initialize\n\t\t\tgoogleMap = new window.google.maps.Map(mapRef.current, {\n\t\t\t\tzoom: 15,\n\t\t\t\tcenter: center,\n\t\t\t\tclickableIcons: false,\n\t\t\t\tdisableDefaultUI: true,\n\t\t\t\tgestureHandling: \"greedy\",\n\t\t\t\tmapTypeControlOptions: {\n\t\t\t\t\tposition: window.google.maps.ControlPosition.BOTTOM_CENTER,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t// Marker initialize\n\t\t\tmarker = new window.google.maps.Marker({\n\t\t\t\tmap: googleMap,\n\t\t\t\tvisible: false,\n\t\t\t\ticon: {\n\t\t\t\t\turl: pin_marker,\n\t\t\t\t\tsize: new window.google.maps.Size(42, 50),\n\t\t\t\t\torigin: new window.google.maps.Point(0, 0),\n\t\t\t\t\tanchor: new window.google.maps.Point(21, 47),\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t// AutoComplete initialize, cannot use useRef to get element\n\t\t\tautoComplete = new window.google.maps.places.Autocomplete(inputRef.current, {\n\t\t\t\tfields: [\"geometry\", \"name\"],\n\t\t\t\ttypes: [\"geocode\"],\n\t\t\t\tcomponentRestrictions: { country: [\"id\"] },\n\t\t\t});\n\t\t\tautoComplete.bindTo(\"bounds\", googleMap);\n\n\t\t\t// Radius circle initialize\n\t\t\tcircle = new window.google.maps.Circle({\n\t\t\t\tmap: googleMap,\n\t\t\t\tstrokeColor: \"#FF0000\",\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t\tstrokeWeight: 0,\n\t\t\t\tfillColor: \"#FF0000\",\n\t\t\t\tfillOpacity: 0.2,\n\t\t\t\tclickable: false,\n\t\t\t});\n\n\t\t\t// Polygon initialize\n\t\t\tpolygon = new window.google.maps.Polygon({\n\t\t\t\tmap: googleMap,\n\t\t\t\tpaths: [],\n\t\t\t\tstrokeColor: \"#FF0000\",\n\t\t\t\tstrokeOpacity: 0.5,\n\t\t\t\tstrokeWeight: 2,\n\t\t\t\tfillOpacity: 0,\n\t\t\t\tclickable: false,\n\t\t\t});\n\n\t\t\t// Directions initialize\n\t\t\tdirectionsService = new window.google.maps.DirectionsService();\n\t\t\tdirectionsRenderer = new window.google.maps.DirectionsRenderer({\n\t\t\t\tsuppressMarkers: true,\n\t\t\t\tpreserveViewport: true,\n\t\t\t});\n\n\t\t\tmapEventListener();\n\t\t});\n\t}, []);\n\n\tconst getLocation = (lat: number, lng: number, show?: boolean) => {\n\t\todpMarker.map((x) => x.setMap(null));\n\t\tif (directionsRenderer) directionsRenderer.setMap(null);\n\n\t\tgoogleMap.panTo({ lat, lng });\n\n\t\tcircle.setMap(null);\n\t\tcircle.setMap(googleMap);\n\t\tcircle.setCenter({ lat, lng });\n\t\tcircle.setRadius(parseFloat(radiusRef.current.value));\n\n\t\tsetLoading(true);\n\t\tsetStatus(\"Fetching data...\");\n\n\t\tAxiosLocation({ url: `https://siis-api.udata.id/point_kelurahan/${lng},${lat}` })\n\t\t\t.then((resolve) => {\n\t\t\t\tconst { provinsi, kabupaten, kecamatan, kelurahan, shape } = resolve.data.data[0];\n\t\t\t\tconst polygonLayer = shape\n\t\t\t\t\t.slice(11, -2)\n\t\t\t\t\t.split(\", \")\n\t\t\t\t\t.map((x: string) => {\n\t\t\t\t\t\tconst split = x.split(\" \");\n\t\t\t\t\t\treturn { lat: parseFloat(split[1]), lng: parseFloat(split[0]) };\n\t\t\t\t\t});\n\t\t\t\tpolygon.setPath(polygonLayer);\n\t\t\t\tpolygon.setMap(googleMap);\n\t\t\t\tconst kota = kabupaten.split(\" \")[0] === \"KOTA\" ? kabupaten.replace(\"KOTA \", \"\") : kabupaten;\n\n\t\t\t\tconst name = `Kel. ${titleCase(kelurahan)}, Kec. ${titleCase(kecamatan)}, ${kota ? \"Kota\" : \"Kab.\"} ${titleCase(kota)}, ${titleCase(provinsi).replace(\"Dki\", \"DKI\")}`;\n\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetData(name);\n\t\t\t\tsetOdpStatus(\"Fetching ODP data...\");\n\n\t\t\t\tbottomRef.current.style.transition = \".3s\";\n\t\t\t\tbottomRef.current.style.bottom = \"200px\";\n\t\t\t\tsetBottomShow(true);\n\t\t\t\tgetDirection(lat, lng);\n\t\t\t})\n\t\t\t.catch((reject) => {\n\t\t\t\tif (!axios.isCancel(reject)) {\n\t\t\t\t\tconsole.log(reject);\n\t\t\t\t\tsetStatus(\"Fetching failed!\");\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tconst getDirection = (lat: number, lng: number): void => {\n\t\tAxiosDirection({ url: \"http://digitasi-consumer-siis-dev.vsan-apps.playcourt.id/api/siis/v1/get-odp\", method: \"post\", data: { lat: lat, long: lng, radius: radiusRef.current.value }, auth: { username: \"telkom\", password: process.env.ODP_PASSWORD } })\n\t\t\t.then((resolve) => {\n\t\t\t\tconst odpData = resolve.data.data.features.filter((x) => x.attributes.portidlenumber > 0);\n\t\t\t\tsetOdpStatus(`${odpData.length} ODP found`);\n\t\t\t\todpMarker = [];\n\t\t\t\tgoogleMap.setCenter({ lat: lat, lng: lng });\n\t\t\t\tif (odpData.length) {\n\t\t\t\t\tif (parseFloat(radiusRef.current.value) <= 150) {\n\t\t\t\t\t\tgoogleMap.setZoom(18);\n\t\t\t\t\t} else if (parseFloat(radiusRef.current.value) >= 250) {\n\t\t\t\t\t\tgoogleMap.setZoom(16);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgoogleMap.setZoom(17);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (bottomRef.current.dataset.show === \"true\") googleMap.panBy(0, 70);\n\n\t\t\t\todpData.forEach((x, i) => {\n\t\t\t\t\tconst data = x.attributes;\n\t\t\t\t\tlet pin: string;\n\t\t\t\t\tswitch (data.status_occ_add) {\n\t\t\t\t\t\tcase \"RED\":\n\t\t\t\t\t\t\tpin = pin_red;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"YELLOW\":\n\t\t\t\t\t\t\tpin = pin_yellow;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"GREEN\":\n\t\t\t\t\t\t\tpin = pin_green;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tpin = pin_black;\n\t\t\t\t\t}\n\n\t\t\t\t\todpMarker.push(\n\t\t\t\t\t\tnew window.google.maps.Marker({\n\t\t\t\t\t\t\tmap: googleMap,\n\t\t\t\t\t\t\tposition: { lat: data.lat, lng: data.long },\n\t\t\t\t\t\t\ticon: {\n\t\t\t\t\t\t\t\turl: pin,\n\t\t\t\t\t\t\t\tsize: new window.google.maps.Size(38, 45),\n\t\t\t\t\t\t\t\torigin: new window.google.maps.Point(0, 0),\n\t\t\t\t\t\t\t\tanchor: new window.google.maps.Point(19, 42),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\n\t\t\t\t\todpMarker[i].infoWindow = new window.google.maps.InfoWindow({\n\t\t\t\t\t\tcontent: `<div>\n\t\t\t\t\t\t<span>Latitude: ${data.lat}</span><br/>\n\t\t\t\t\t\t<span>Longitude: ${data.long}</span><br/>\n\t\t\t\t\t\t<span>Device ID: ${data.device_id}</span><br/>\n\t\t\t\t\t\t<span>Device name: ${data.devicename}</span><br/>\n\t\t\t\t\t\t<span>Status: ${data.status_occ_add}</span><br/>\n\t\t\t\t\t\t<span>Port number: ${data.deviceportnumber}</span><br/>\n\t\t\t\t\t\t<span>Idle port: ${data.portidlenumber}</span>\n\t\t\t\t\t</div>`,\n\t\t\t\t\t});\n\n\t\t\t\t\todpMarker[i].addListener(\"mouseover\", () => {\n\t\t\t\t\t\todpMarker.map((x) => x.infoWindow.close());\n\t\t\t\t\t\todpMarker[i].infoWindow.open(googleMap, odpMarker[i]);\n\t\t\t\t\t});\n\n\t\t\t\t\todpMarker[i].addListener(\"mouseout\", () => {\n\t\t\t\t\t\todpMarker[i].infoWindow.close();\n\t\t\t\t\t});\n\n\t\t\t\t\todpMarker[i].addListener(\"click\", () => {\n\t\t\t\t\t\todpMarker.map((x) => x.infoWindow.close());\n\t\t\t\t\t\todpMarker[i].infoWindow.open(googleMap, odpMarker[i]);\n\t\t\t\t\t\tdirectionsService.route(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\torigin: `${lat},${lng}`,\n\t\t\t\t\t\t\t\tdestination: `${data.lat},${data.long}`,\n\t\t\t\t\t\t\t\ttravelMode: \"WALKING\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(response, status) => {\n\t\t\t\t\t\t\t\tif (status === \"OK\") {\n\t\t\t\t\t\t\t\t\tdirectionsRenderer.setMap(googleMap);\n\t\t\t\t\t\t\t\t\tdirectionsRenderer.setDirections(response);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\twindow.alert(\"Directions request failed due to \" + status);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((reject) => {\n\t\t\t\tif (!axios.isCancel(reject)) {\n\t\t\t\t\tconsole.log(reject);\n\t\t\t\t\tsetOdpStatus(\"Fetching ODP failed!\");\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tconst mapEventListener = (): void => {\n\t\twindow.google.maps.event.addListener(autoComplete, \"place_changed\", () => {\n\t\t\tconst place = autoComplete.getPlace();\n\t\t\tif (!place.geometry) {\n\t\t\t\talert(\"Quota exceeded!\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { location, viewport } = place.geometry;\n\t\t\tif (viewport) {\n\t\t\t\tgoogleMap.fitBounds(place.geometry.viewport);\n\t\t\t} else {\n\t\t\t\tgoogleMap.setCenter(place.geometry.location);\n\t\t\t\tgoogleMap.setZoom(16);\n\t\t\t}\n\n\t\t\tmarker.setPosition(location);\n\t\t\tmarker.setVisible(true);\n\n\t\t\tsetStatus(\"Fetching data...\");\n\n\t\t\tpolygon.setMap(null);\n\t\t\tgetLocation(location.lat(), location.lng());\n\t\t});\n\n\t\t// window.google.maps.event.addDomListener(zoomInRef.current, \"click\", () => {\n\t\t// \tgoogleMap.setZoom(googleMap.getZoom() + 1);\n\t\t// });\n\n\t\tmarker.addListener(\"click\", (): void => {\n\t\t\tconsole.log(bottomShow);\n\t\t});\n\n\t\tgoogleMap.addListener(\"click\", (e: any): void => {\n\t\t\tif (inputRef.current) inputRef.current.value = \"\";\n\n\t\t\tmarker.setPosition(e.latLng);\n\t\t\tmarker.setVisible(true);\n\n\t\t\tsetStatus(\"Fetching data...\");\n\n\t\t\tpolygon.setMap(null);\n\t\t\tgetLocation(e.latLng.lat(), e.latLng.lng());\n\t\t});\n\t};\n\n\tconst findMe = () => {\n\t\tif (navigator.geolocation) {\n\t\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\t\t({ coords }) => {\n\t\t\t\t\tif (inputRef.current) inputRef.current.value = \"\";\n\t\t\t\t\tconst position = {\n\t\t\t\t\t\tlat: coords.latitude,\n\t\t\t\t\t\tlng: coords.longitude,\n\t\t\t\t\t};\n\n\t\t\t\t\tmarker.setPosition(position);\n\t\t\t\t\tmarker.setVisible(true);\n\n\t\t\t\t\tpolygon.setMap(null);\n\n\t\t\t\t\tgoogleMap.setCenter(position);\n\t\t\t\t\tgoogleMap.setZoom(17);\n\n\t\t\t\t\tgetLocation(coords.latitude, coords.longitude);\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\talert(\"The Geolocation service failed.\");\n\t\t\t\t},\n\t\t\t);\n\t\t} else {\n\t\t\talert(\"Your browser doesn't support geolocation.\");\n\t\t}\n\t};\n\n\tconst touchMoveHandler = (e: TouchEvent) => {\n\t\tconst touchPos = e.changedTouches[0].clientY;\n\t\tlet touchStartEdge = window.innerHeight - touchStart;\n\t\tlet value = window.innerHeight - touchPos + touchStartEdge;\n\t\tif (bottomShow) {\n\t\t\ttouchStartEdge = 200 - (window.innerHeight - touchStart);\n\t\t\tvalue = 200 - (touchPos - (window.innerHeight - 200) - touchStartEdge);\n\n\t\t\twindow;\n\t\t}\n\n\t\tif (value > 200) value = 200;\n\t\tbottomRef.current.style.transition = \"none\";\n\t\tbottomRef.current.style.bottom = value + \"px\";\n\t};\n\n\tconst touchEndHandler = () => {\n\t\tconst bottomPos = Number(bottomRef.current.style.bottom.replace(\"px\", \"\"));\n\t\tif (bottomPos > 100) {\n\t\t\tbottomRef.current.style.transition = \".3s\";\n\t\t\tbottomRef.current.style.bottom = \"200px\";\n\t\t\tsetBottomShow(true);\n\t\t} else {\n\t\t\tbottomRef.current.style.transition = \".3s\";\n\t\t\tbottomRef.current.style.bottom = \"20px\";\n\t\t\tsetBottomShow(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"map-page\" style={{ height: window.innerHeight }}>\n\t\t\t<div className=\"map-container\" ref={mapRef} />\n\t\t\t<div className=\"map-top\">\n\t\t\t\t<input placeholder=\"Search here...\" className=\"map-top-search\" ref={inputRef} />\n\t\t\t\t<img src={my_location} alt=\"find-me\" className=\"map-top-findme\" onClick={findMe} />\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"map-radius-icon\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetRadiusShow(true);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{radiusShow ? (\n\t\t\t\t<>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"map-radius-bg\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetRadiusShow(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"map-radius-con\">\n\t\t\t\t\t\t<span>Radius: {inputRadius}</span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\tmin=\"100\"\n\t\t\t\t\t\t\tmax=\"300\"\n\t\t\t\t\t\t\tstep=\"25\"\n\t\t\t\t\t\t\tvalue={inputRadius}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\tsetInputRadius(e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<></>\n\t\t\t)}\n\t\t\t<input type=\"number\" ref={radiusRef} value={inputRadius} readOnly style={{ display: \"none\" }} />\n\t\t\t<div\n\t\t\t\tclassName=\"map-bottom\"\n\t\t\t\tref={bottomRef}\n\t\t\t\tdata-show={bottomShow}\n\t\t\t\tonTouchStart={(e: TouchEvent) => {\n\t\t\t\t\tsetTouchStart(e.touches[0].clientY);\n\t\t\t\t}}\n\t\t\t\tonTouchMove={touchMoveHandler}\n\t\t\t\tonTouchEnd={touchEndHandler}>\n\t\t\t\t{loading ? (\n\t\t\t\t\t<div className=\"map-bottom-nopick\">{status}</div>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className=\"map-bottom-data map-bottom-body\">{data}</div>\n\t\t\t\t\t\t<div className=\"map-bottom-odp map-bottom-body\">{odpStatus}</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\ndeclare global {\n\tinterface Window {\n\t\tgoogle: any;\n\t}\n}\n\nexport default MapComponent;\n"],"sourceRoot":""}