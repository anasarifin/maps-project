{"version":3,"sources":["webpack:///./src/styles/MapsDesktop.scss?2313","webpack:///./src/styles/MapsDesktop.scss","webpack:///./src/components/Menu.tsx","webpack:///./src/components/Info.tsx","webpack:///./src/components/Editor.tsx","webpack:///./src/components/Save.tsx","webpack:///./src/components/Button.tsx","webpack:///./src/components/Underspec.tsx","webpack:///./src/components/StreetList.tsx","webpack:///./src/pages/MapsDesktop.tsx"],"names":["api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","Menu","inputRef","radiusRef","radius","setRadius","source","setSource","sourceRef","hide","className","ref","placeholder","data-source","onClick","type","min","max","step","value","onChange","e","parseFloat","target","Info","infoRef","locationName","status","odpStatus","loading","Editor","mode","useEffect","console","log","id","data-place","data-mode","data-tip","Save","useRef","current","Button","findMe","Underspec","underspec","map","x","inet","olt_rx_pwr","onu_rx_pwr","onu","olt","olt_rw_pwr","number","StreetList","streetList","length","street","AxiosLocation","AxiosCancelRequest","axios","AxiosDirection","AxiosStreet","center","lat","lng","titleCase","str","toLowerCase","split","word","replace","toUpperCase","join","MapComponent","googleMap","marker","infoWindow","circle","polygon","autoComplete","drawingManager","customPolygon","directionsService","directionsRenderer","distanceMatrix","mapRef","streetRef","useState","setLocationName","setStatus","setOdpStatus","setStreetList","streetStatus","setStreetStatus","setMode","setLoading","showSave","setShowSave","setUnderspec","polygonSaved","odpMarker","googleScript","document","createElement","src","process","window","body","appendChild","addEventListener","google","maps","Map","zoom","clickableIcons","disableDefaultUI","gestureHandling","Marker","visible","zIndex","InfoWindow","inputElement","places","Autocomplete","fields","componentRestrictions","country","bindTo","Circle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","Polygon","paths","option","editable","draggable","drawing","DrawingManager","polygonOptions","rectangleOptions","setMap","DirectionsService","DirectionsRenderer","suppressMarkers","preserveViewport","DistanceMatrixService","mapEventListener","addListener","dataset","getLocation","latLng","parseInt","event","place","getPlace","geometry","location","viewport","fitBounds","setCenter","setZoom","shape","setDrawingMode","save","getElementById","addDomListener","savePolygon","exit","draw","OverlayType","RECTANGLE","zoomIn","getZoom","zoomOut","sourceOption","getElementsByClassName","classList","contains","innerText","getDirection","getPosition","rectangleMode","polygonMode","POLYGON","deleteMode","setPosition","setVisible","url","then","resolve","data","polygonLayer","slice","setPath","getStreetName","streetName","regionType","kabupaten","kota","name","kelurahan","kecamatan","provinsi","getStreetList","reject","isCancel","sourceUrl","toString","long","method","auth","username","password","odpData","odpList","device_id","devicename","latitude","longitude","status_occ_add","idle_port","portidlenumber","device_port","deviceportnumber","odp_eid","odp_name","underspec_detail","filter","y","hasil_ukur","z","odpFormat","odpPercent","devicePort","reduce","acc","idlePort","toFixed","forEach","color","position","icon","path","SymbolPath","CIRCLE","scale","latlng","index","distance","spherical","computeDistanceBetween","close","open","route","origin","destination","travelMode","response","routes","legs","info","innerHTML","setDirections","dataDistance","sort","a","b","getDistance","list","st_name","uniqueList","Set","Promise","get","streetFilter","results","address_components","types","short_name","getDistanceMatrix","origins","destinations","LatLng","infoDistance","rows","elements","getPath","getArray","bounds","getBounds","NE","getNorthEast","SW","getSouthWest","setOptions","navigator","geolocation","getCurrentPosition","coords","alert","effect"],"mappings":"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","file":"3.bundle.js","sourcesContent":["var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js??ref--4-2!./MapsDesktop.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".map-page{width:100vw;height:100vh}.map-container{width:100%;height:100%}.map-infowindow{max-width:200px;font-size:1.1rem;font-weight:bold}.map-info,.map-drawer{position:fixed;background-color:white;padding:20px;border-radius:5px;box-shadow:0 0.5px 2px 1px rgba(0,0,0,0.3);left:50%;bottom:10px;transform:translate(-50%)}.map-info{max-width:320px;font-size:1.1rem;text-align:center}.map-info .odp{margin-bottom:10px;padding-bottom:10px;border-bottom:1px solid rgba(0,0,0,0.5)}.map-menu{position:fixed;top:10px;left:10px;border-radius:3px}.map-search-bar{display:block;box-shadow:0 0.5px 2px 1px rgba(0,0,0,0.3);outline:none;border:none;border-radius:3px;width:340px;height:40px;margin-bottom:10px;padding:0 10px;font-size:1.1rem}.map-radius-slider{display:inline-block;background-color:white;width:max-content;padding:10px;border-radius:3px;box-shadow:0 0.5px 2px 1px rgba(0,0,0,0.3)}.map-radius-slider span{margin-right:10px}.map-source-option{margin:16px 0}.map-source-option span{background-color:white;font-size:1.2rem;padding:7px 10px;border-radius:3px;box-shadow:0 0.5px 2px 1px rgba(0,0,0,0.3);margin-right:15px;cursor:pointer}.map-source-option span:nth-child(4){margin:0}.map-source-option span.active{color:red}.map-button{position:fixed;right:10px;bottom:100px}.map-button svg{cursor:pointer;background-color:white;padding:8px;margin-bottom:10px;display:block;border-radius:5px;box-shadow:0 0.5px 2px 1px rgba(0,0,0,0.3);width:46px;height:46px;color:rgba(0,0,0,0.8)}.map-button svg:hover{background-color:whitesmoke;color:black}.map-drawer{display:block;width:240px}.map-drawer-option{display:grid;grid-template-columns:repeat(3, 1fr);gap:10px;justify-items:center;margin-bottom:15px}.map-drawer-option .option{cursor:pointer;width:30px;height:30px;color:rgba(0,0,0,0.8)}.map-drawer-option .option.active{color:red}.map-drawer-option .option:hover{color:red}#exitEditor{width:100%;text-align:center;cursor:pointer;border-top:1px solid rgba(0,0,0,0.5);padding-top:15px}#exitEditor:hover{color:red}.map-save{position:fixed;top:10px;left:50%;transform:translate(-50%)}.map-save input{width:360px;height:30px;padding:25px 50px 25px 15px;box-shadow:0 0.5px 2px 1px rgba(0,0,0,0.3);outline:none;border:none;border-radius:3px}.map-save #savePolygon{position:absolute;top:50%;right:10px;width:30px;height:30px;transform:translateY(-50%)}.map-save #savePolygon:hover{color:red}.map-street{position:fixed;left:10px;bottom:10px;background-color:white;box-shadow:0 0.5px 2px 1px rgba(0,0,0,0.3);padding:15px;border-radius:5px}.map-street .list{margin-top:10px;padding-top:10px;border-top:1px solid rgba(0,0,0,0.5)}.map-underspec{position:fixed;right:10px;top:10px;background-color:white;border-radius:5px;box-shadow:0 0.5px 2px 1px rgba(0,0,0,0.3)}.hide{display:none !important}table,th,td{border:1px solid black;border-collapse:collapse}th,td{padding:10px;text-align:center}a[href^=\\\"http://maps.google.com/maps\\\"],a[href^=\\\"https://maps.google.com/maps\\\"],a[href^=\\\"https://www.google.com/maps\\\"]{display:none !important}.gmnoprint:not(.gm-bundled-control){display:none}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from \"react\";\n\nconst Menu = ({ inputRef, radiusRef, radius, setRadius, source, setSource, sourceRef, hide }) => {\n    return (\n        <div className={\"map-menu\" + (hide ? \" hide\" : \"\")}>\n            <input className=\"map-search-bar\" ref={inputRef} placeholder=\"Search here...\" />\n            <div className=\"map-source-option\" data-source={source} ref={sourceRef}>\n                <span className={\"option\" + (source == 0 ? \" active\" : \"\")}>SIIS</span>\n                <span\n                    className={\"option\" + (source == 1 ? \" active\" : \"\")}\n                    onClick={() => {\n                        setSource(1);\n                    }}\n                >\n                    UIM\n                </span>\n                <span\n                    className={\"option\" + (source == 2 ? \" active\" : \"\")}\n                    onClick={() => {\n                        setSource(2);\n                    }}\n                >\n                    Valins\n                </span>\n                <span\n                    className={\"option\" + (source == 3 ? \" active\" : \"\")}\n                    onClick={() => {\n                        setSource(3);\n                    }}\n                >\n                    Underspec\n                </span>\n            </div>\n            <div className={\"map-radius-slider\" + (source == 3 ? \" hide\" : \"\")}>\n                <span>Radius: {radius}</span>\n                <input\n                    ref={radiusRef}\n                    type=\"range\"\n                    min=\"100\"\n                    max=\"300\"\n                    step=\"25\"\n                    value={radius}\n                    onChange={(e) => {\n                        setRadius(parseFloat(e.target.value));\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Menu;\n","import React from \"react\";\n\nconst Info = ({ infoRef, locationName, status, odpStatus, loading, hide }) => {\n    return (\n        <div className={\"map-info\" + (hide ? \" hide\" : \"\")} ref={infoRef}>\n            {loading ? (\n                <div className=\"loading\">{status}</div>\n            ) : (\n                <>\n                    <div className=\"odp\">{odpStatus}</div>\n                    <div className=\"address\">{locationName}</div>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Info;\n","import React, { useEffect } from \"react\";\nimport { BiRectangle, BiShapePolygon, BiTrash } from \"react-icons/bi\";\n\nconst Editor = ({ mode }) => {\n    useEffect(() => {\n        console.log(mode);\n    }, [mode]);\n\n    return (\n        <div className={\"map-drawer\" + (mode == \"normal\" ? \" hide\" : \"\")}>\n            <div className=\"map-drawer-option\">\n                <BiRectangle\n                    id=\"rectangleMode\"\n                    data-place=\"top\"\n                    data-mode=\"rectangle\"\n                    data-tip=\"Rectangle\"\n                    className={\"option\" + (mode == \"rectangle\" ? \" active\" : \"\")}\n                />\n                <BiShapePolygon\n                    id=\"polygonMode\"\n                    data-place=\"top\"\n                    data-mode=\"polygon\"\n                    data-tip=\"Custom\"\n                    className={\"option\" + (mode == \"polygon\" ? \" active\" : \"\")}\n                />\n                <BiTrash\n                    id=\"deleteMode\"\n                    data-place=\"top\"\n                    data-mode=\"delete\"\n                    data-tip=\"Delete\"\n                    className={\"option\" + (mode == \"delete\" ? \" active\" : \"\")}\n                />\n            </div>\n            <div className=\"map-drawer-button\">\n                <div id=\"exitEditor\">Exit Editor</div>\n            </div>\n        </div>\n    );\n};\n\nexport default Editor;\n","import React, { useEffect, useRef } from \"react\";\nimport { MdSave } from \"react-icons/md\";\n\nconst Save = ({ hide }) => {\n    const ref = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n        ref.current.value = \"\";\n    }, [hide]);\n\n    return (\n        <div className={\"map-save\" + (hide ? \" hide\" : \"\")}>\n            <input placeholder=\"Input address...\" ref={ref} />\n            <MdSave id=\"savePolygon\" />\n        </div>\n    );\n};\n\nexport default Save;\n","import React from \"react\";\nimport { MdEdit, MdGpsFixed } from \"react-icons/md\";\nimport { BiPlus, BiMinus } from \"react-icons/bi\";\n\nconst Button = ({ findMe, hide }) => {\n    return (\n        <div className=\"map-button\">\n            <div className={hide ? \"hide\" : \"\"}>\n                <MdEdit id=\"drawingMode\" data-tip=\"Editor Mode\" />\n                <MdGpsFixed onClick={findMe} data-tip=\"Find My Location\" />\n            </div>\n            <BiPlus id=\"zoomIn\" data-tip=\"Zoom In\" />\n            <BiMinus id=\"zoomOut\" data-tip=\"Zoom Out\" />\n        </div>\n    );\n};\n\nexport default Button;\n","import React from \"react\";\n\nconst klasifikasi = (onu: number, olt: number) => {\n    const number = onu < olt ? onu : olt;\n    if (number >= -24) {\n        return \"Very good\";\n    } else if (number < -24 && number >= -27) {\n        return \"Good\";\n    } else if (number < -27 && number >= -30) {\n        return \"Poor\";\n    } else if (number < -30) {\n        return \"Bad\";\n    } else {\n        return \"\";\n    }\n};\n\nconst Underspec = ({ underspec, hide }) => {\n    return (\n        <div className={\"map-underspec\" + (hide ? \" hide\" : \"\")}>\n            <table>\n                <tr>\n                    <th>No. INET</th>\n                    <th>RX OLT</th>\n                    <th>RX ONT</th>\n                    <th>Klasifikasi</th>\n                </tr>\n                {underspec.map((x) => {\n                    return (\n                        <tr>\n                            <td>{x.inet}</td>\n                            <td>{x.olt_rx_pwr}</td>\n                            <td>{x.onu_rx_pwr}</td>\n                            <td>{klasifikasi(parseFloat(x.onu_rx_pwr), parseFloat(x.olt_rw_pwr))}</td>\n                        </tr>\n                    );\n                })}\n            </table>\n        </div>\n    );\n};\n\nexport default Underspec;\n","import React from \"react\";\n\nconst StreetList = ({ streetList, status, hide, ref }) => {\n    return (\n        <div className={\"map-street\" + (hide ? \" hide\" : \"\")}>\n            <div>{status}</div>\n            {streetList.length ? (\n                <div className=\"list\">\n                    {streetList.map((street) => {\n                        return <div>{street}</div>;\n                    })}\n                </div>\n            ) : (\n                <></>\n            )}\n        </div>\n    );\n};\n\nexport default StreetList;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useRef, useEffect } from \"react\";\nimport axios from \"axios\";\nimport AxiosCancelRequest from \"axios-cancel-request\";\nconst AxiosLocation = AxiosCancelRequest(axios);\nconst AxiosDirection = AxiosCancelRequest(axios);\nconst AxiosStreet = AxiosCancelRequest(axios);\nimport ReactTooltip from \"react-tooltip\";\nimport \"../styles/MapsDesktop.scss\";\nimport Menu from \"../components/Menu\";\nimport Info from \"../components/Info\";\nimport Editor from \"../components/Editor\";\nimport Save from \"../components/Save\";\nimport Button from \"../components/Button\";\nimport Underspec from \"../components/Underspec\";\nimport StreetList from \"../components/StreetList\";\n\nconst center = {\n    lat: -6.2088,\n    lng: 106.8456,\n};\nconst titleCase = (str: string) => {\n    return str\n        .toLowerCase()\n        .split(\" \")\n        .map((word) => {\n            return word.replace(word[0], word[0]?.toUpperCase());\n        })\n        .join(\" \");\n};\nconst odpFormat = (odpList, source: number) => {\n    switch (source) {\n        case 0:\n            return odpList.map((x) => {\n                return {\n                    id: x.device_id,\n                    name: x.devicename,\n                    latitude: x.lat,\n                    longitude: x.long,\n                    status: x.status_occ_add,\n                    idle_port: parseFloat(x.portidlenumber),\n                    device_port: parseFloat(x.deviceportnumber),\n                };\n            });\n        case 1:\n            return odpList.map((x) => {\n                return {\n                    id: x.device_id,\n                    name: x.devicename,\n                    latitude: x.lat,\n                    longitude: x.long,\n                    status: x.status_occ_add,\n                    idle_port: parseFloat(x.portidlenumber),\n                    device_port: parseFloat(x.deviceportnumber),\n                };\n            });\n        case 2:\n            return odpList.map((x) => {\n                return {\n                    id: x.odp_eid,\n                    name: x.odp_name,\n                    latitude: parseFloat(x.latitude),\n                    longitude: parseFloat(x.longitude),\n                    status: x.status_occ_add,\n                    idle_port: parseFloat(x.portidlenumber),\n                    device_port: x.deviceportnumber,\n                };\n            });\n        case 3:\n            return odpList.map((x) => {\n                return {\n                    id: x.odp_eid,\n                    name: x.odp_name.toUpperCase(),\n                    latitude: parseFloat(x.latitude),\n                    longitude: parseFloat(x.longitude),\n                    status: x.status_occ_add,\n                    idle_port: parseFloat(x.portidlenumber),\n                    device_port: x.deviceportnumber,\n                    underspec_detail: x.underspec_detail.filter((y) => y.hasil_ukur.inet != null).map((z) => z.hasil_ukur),\n                };\n            });\n        default:\n            return [];\n    }\n};\n\nconst MapComponent = () => {\n    const mapRef = useRef<HTMLDivElement>(null);\n    const infoRef = useRef<HTMLDivElement>(null);\n    const streetRef = useRef<HTMLDivElement>(null);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const radiusRef = useRef<HTMLInputElement>(null);\n    const sourceRef = useRef<HTMLInputElement>(null);\n    const [locationName, setLocationName] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [odpStatus, setOdpStatus] = useState(\"\");\n    const [streetList, setStreetList] = useState([]);\n    const [streetStatus, setStreetStatus] = useState(\"\");\n    const [mode, setMode] = useState(\"normal\");\n    const [loading, setLoading] = useState(true);\n    const [showSave, setShowSave] = useState(false);\n    const [radius, setRadius] = useState(200);\n    const [source, setSource] = useState(0);\n    const [underspec, setUnderspec] = useState([]);\n\n    // Initialize an variables to call it later\n    let googleMap;\n    let marker;\n    let infoWindow;\n    let circle;\n    let polygon;\n    let autoComplete;\n    let drawingManager;\n    let customPolygon;\n    let polygonSaved = [];\n    let odpMarker = [];\n    let directionsService;\n    let directionsRenderer;\n    let distanceMatrix;\n\n    useEffect(() => {\n        // Create script element and call google maps api\n        const googleScript = document.createElement(\"script\");\n        googleScript.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.GOOGLE_API}&libraries=places,geometry,drawing`;\n        window.document.body.appendChild(googleScript);\n\n        googleScript.addEventListener(\"load\", async () => {\n            // Maps initialize\n            googleMap = new window.google.maps.Map(mapRef.current, {\n                zoom: 15,\n                center: center,\n                clickableIcons: false,\n                disableDefaultUI: true,\n                gestureHandling: \"greedy\",\n            });\n\n            // --- NOTE ---\n            // You can't use React State inside window.google class,\n            // so use traditional dom or React useRef\n            // ------------\n\n            // Marker initialize\n            marker = new window.google.maps.Marker({\n                map: googleMap,\n                visible: false,\n                zIndex: 2,\n            });\n\n            // InfoWindow initialize\n            infoWindow = new window.google.maps.InfoWindow();\n\n            // AutoComplete initialize, cannot use useRef to get element\n            const inputElement = inputRef.current;\n            autoComplete = new window.google.maps.places.Autocomplete(inputElement, {\n                fields: [\"geometry\", \"name\"],\n                componentRestrictions: { country: [\"id\"] },\n            });\n            autoComplete.bindTo(\"bounds\", googleMap);\n\n            // Radius circle initialize\n            circle = new window.google.maps.Circle({\n                map: googleMap,\n                strokeColor: \"#FF0000\",\n                strokeOpacity: 0,\n                strokeWeight: 0,\n                fillColor: \"#FF0000\",\n                fillOpacity: 0.2,\n                clickable: false,\n            });\n\n            // Polygon initialize\n            polygon = new window.google.maps.Polygon({\n                map: googleMap,\n                paths: [],\n                strokeWeight: 2,\n                strokeColor: \"#FF3300\",\n                fillOpacity: 0,\n                clickable: false,\n            });\n\n            // Drawing Manager initialize\n            const option = {\n                editable: true,\n                draggable: true,\n                strokeColor: \"#FF3300\",\n                strokeWeight: 2,\n                fillOpacity: 0.5,\n                fillColor: \"#FF3300\",\n            };\n            drawingManager = new window.google.maps.drawing.DrawingManager({\n                polygonOptions: option,\n                rectangleOptions: option,\n            });\n            drawingManager.setMap(googleMap);\n\n            // Directions initialize\n            directionsService = new window.google.maps.DirectionsService();\n            directionsRenderer = new window.google.maps.DirectionsRenderer({\n                suppressMarkers: true,\n                preserveViewport: false,\n            });\n\n            // Distance Matrix initialize\n            distanceMatrix = new window.google.maps.DistanceMatrixService();\n\n            mapEventListener();\n        });\n    }, []);\n\n    const mapEventListener = (): void => {\n        googleMap.addListener(\"click\", (e: any): any => {\n            if (mapRef.current.dataset.mode != \"normal\") return false;\n\n            if (inputRef.current) inputRef.current.value = \"\";\n            getLocation(e.latLng.lat(), e.latLng.lng(), radiusRef.current.value, parseInt(sourceRef.current.dataset.source));\n        });\n\n        window.google.maps.event.addListener(autoComplete, \"place_changed\", () => {\n            const place = autoComplete.getPlace();\n            if (!place.geometry) {\n                console.log(\"Quota exceeded!\");\n                return;\n            }\n\n            const { location, viewport } = place.geometry;\n            if (viewport) {\n                googleMap.fitBounds(place.geometry.viewport);\n            } else {\n                googleMap.setCenter(place.geometry.location);\n                googleMap.setZoom(16);\n            }\n\n            getLocation(location.lat(), location.lng(), radiusRef.current.value, parseInt(sourceRef.current.dataset.source));\n        });\n\n        window.google.maps.event.addListener(drawingManager, \"polygoncomplete\", (e) => {\n            setMode(\"hand\");\n            customPolygon?.shape.setMap(null);\n            drawingManager.setDrawingMode(null);\n            customPolygon = { type: \"polygon\", shape: e };\n\n            setShowSave(true);\n        });\n\n        window.google.maps.event.addListener(drawingManager, \"rectanglecomplete\", (e) => {\n            setMode(\"hand\");\n            customPolygon?.shape.setMap(null);\n            drawingManager.setDrawingMode(null);\n            customPolygon = { type: \"rectangle\", shape: e };\n            setShowSave(true);\n        });\n\n        // To asign listener to component, use listener provided by Google Maps\n\n        const save = document.getElementById(\"savePolygon\");\n        window.google.maps.event.addDomListener(save, \"click\", () => {\n            savePolygon();\n        });\n\n        const exit = document.getElementById(\"exitEditor\");\n        window.google.maps.event.addDomListener(exit, \"click\", () => {\n            customPolygon?.shape.setMap(null);\n            setShowSave(false);\n            drawingManager.setDrawingMode(null);\n            setMode(\"normal\");\n        });\n\n        const draw = document.getElementById(\"drawingMode\");\n        window.google.maps.event.addDomListener(draw, \"click\", () => {\n            drawingManager?.setDrawingMode(window.google.maps.drawing.OverlayType.RECTANGLE);\n            setMode(\"rectangle\");\n        });\n\n        const zoomIn = document.getElementById(\"zoomIn\");\n        window.google.maps.event.addDomListener(zoomIn, \"click\", () => {\n            googleMap.setZoom(googleMap.getZoom() + 1);\n        });\n\n        const zoomOut = document.getElementById(\"zoomOut\");\n        window.google.maps.event.addDomListener(zoomOut, \"click\", () => {\n            googleMap.setZoom(googleMap.getZoom() - 1);\n        });\n\n        const sourceOption = document.getElementsByClassName(\"map-source-option\")[0];\n        window.google.maps.event.addDomListener(sourceOption, \"click\", (e) => {\n            if (e.target.classList.contains(\"option\")) {\n                switch (e.target.innerText) {\n                    case \"SIIS\":\n                        setSource(0);\n                        if (marker.visible) {\n                            getDirection(marker.getPosition().lat(), marker.getPosition().lng(), radiusRef.current.value, 0);\n                        }\n                        break;\n                    case \"UIM\":\n                        setSource(1);\n                        if (marker.visible) {\n                            getDirection(marker.getPosition().lat(), marker.getPosition().lng(), radiusRef.current.value, 1);\n                        }\n                        break;\n                    case \"Valins\":\n                        setSource(2);\n                        if (marker.visible) {\n                            getDirection(marker.getPosition().lat(), marker.getPosition().lng(), radiusRef.current.value, 2);\n                        }\n                        break;\n                    case \"Underspec\":\n                        setSource(3);\n                        if (marker.visible) {\n                            getDirection(marker.getPosition().lat(), marker.getPosition().lng(), radiusRef.current.value, 3);\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            }\n        });\n\n        const rectangleMode = document.getElementById(\"rectangleMode\");\n        window.google.maps.event.addDomListener(rectangleMode, \"click\", () => {\n            if (mapRef.current.dataset.mode != \"rectangle\") {\n                setMode(\"rectangle\");\n                customPolygon?.shape.setMap(null);\n                setShowSave(false);\n                drawingManager?.setDrawingMode(window.google.maps.drawing.OverlayType.RECTANGLE);\n            } else {\n                setMode(\"hand\");\n                customPolygon?.shape.setMap(null);\n                setShowSave(false);\n                drawingManager?.setDrawingMode(null);\n            }\n        });\n\n        const polygonMode = document.getElementById(\"polygonMode\");\n        window.google.maps.event.addDomListener(polygonMode, \"click\", () => {\n            if (mapRef.current.dataset.mode != \"polygon\") {\n                setMode(\"polygon\");\n                customPolygon?.shape.setMap(null);\n                setShowSave(false);\n                drawingManager?.setDrawingMode(window.google.maps.drawing.OverlayType.POLYGON);\n            } else {\n                setMode(\"hand\");\n                customPolygon?.shape.setMap(null);\n                setShowSave(false);\n                drawingManager?.setDrawingMode(null);\n            }\n        });\n\n        const deleteMode = document.getElementById(\"deleteMode\");\n        window.google.maps.event.addDomListener(deleteMode, \"click\", () => {\n            if (mapRef.current.dataset.mode != \"delete\") {\n                setMode(\"delete\");\n                customPolygon?.shape.setMap(null);\n                setShowSave(false);\n                drawingManager?.setDrawingMode(null);\n            } else {\n                setMode(\"hand\");\n                customPolygon?.shape.setMap(null);\n                setShowSave(false);\n                drawingManager?.setDrawingMode(null);\n            }\n        });\n    };\n\n    const getLocation = (lat: number, lng: number, radius: string, source: number) => {\n        odpMarker.map((x) => x.setMap(null));\n        if (directionsRenderer) directionsRenderer.setMap(null);\n\n        setLoading(true);\n        setStreetList([]);\n        setStreetStatus(\"\");\n        setStatus(\"Fetching data...\");\n        marker.setPosition({ lat, lng });\n        marker.setVisible(true);\n\n        polygon.setMap(null);\n        circle.setMap(null);\n        if (source != 3) circle.setMap(googleMap);\n        circle.setCenter({ lat, lng });\n        circle.setRadius(parseFloat(radius));\n\n        AxiosLocation({ url: `https://siis-api.udata.id/point_kelurahan/${lng},${lat}` })\n            .then(async (resolve) => {\n                const data = resolve.data.data[0];\n                const polygonLayer = data.shape\n                    .slice(11, -2)\n                    .split(\", \")\n                    .map((x: string) => {\n                        const split = x.split(\" \");\n                        return { lat: parseFloat(split[1]), lng: parseFloat(split[0]) };\n                    });\n                polygon.setPath(polygonLayer);\n                polygon.setMap(googleMap);\n\n                const streetName = await getStreetName(lat, lng);\n                const regionType = data.kabupaten.split(\" \")[0] == \"KOTA\";\n                const kota = regionType ? data.kabupaten.replace(\"KOTA \", \"\") : data.kabupaten;\n                const name = `${streetName}Kel. ${titleCase(data.kelurahan)}, Kec. ${titleCase(data.kecamatan)}, ${\n                    regionType ? \"Kota\" : \"Kab.\"\n                } ${titleCase(kota)}, ${titleCase(data.provinsi).replace(\"Dki\", \"DKI\")}`;\n\n                setLoading(false);\n                setLocationName(name);\n                getStreetList(lat, lng);\n                getDirection(lat, lng, radius, source);\n            })\n            .catch((reject) => {\n                if (!axios.isCancel(reject)) {\n                    console.log(reject);\n                    setStatus(\"Fetching data failed!\");\n                }\n            });\n    };\n\n    const getDirection = (lat: number, lng: number, radius: string, source: number): void => {\n        setOdpStatus(\"Fetching ODP data...\");\n\n        let sourceUrl = \"\";\n        switch (source) {\n            case 0:\n                sourceUrl = \"siis\";\n                break;\n            case 1:\n                sourceUrl = \"uim\";\n                break;\n            case 2:\n                sourceUrl = \"valins\";\n                break;\n            case 3:\n                sourceUrl = \"underspec\";\n                break;\n            default:\n                break;\n        }\n\n        let data = {};\n        if (source != 3) {\n            data = {\n                lat: lat.toString(),\n                long: lng.toString(),\n                radius: radius,\n            };\n        } else {\n            data = { lat: lat.toString(), long: lng.toString() };\n        }\n\n        AxiosDirection({\n            url: `http://odpmap-ms-api-dev.vsan-apps.playcourt.id/api/odp/v1/get-odp-${sourceUrl}`,\n            method: \"post\",\n            data: data,\n            auth: { username: \"telkom\", password: process.env.ODP_PASSWORD },\n        })\n            .then((resolve) => {\n                const odpData = odpFormat(resolve.data.data, source);\n                let odpPercent = 0;\n                if (odpData.length) {\n                    const devicePort = odpData.map((x: ODP) => x.device_port).reduce((acc: number, x: number) => acc + x);\n                    const idlePort = odpData.map((x: ODP) => x.idle_port).reduce((acc: number, x: number) => acc + x);\n                    odpPercent = parseFloat(((idlePort / devicePort) * 100).toFixed(1));\n                }\n                setOdpStatus(`${odpData.length} ODP found (${odpPercent}%)`);\n                odpMarker = [];\n                if (source != 3) {\n                    googleMap.setCenter({ lat: lat, lng: lng });\n                    if (odpData.length) googleMap.setZoom(18);\n                } else {\n                    if (odpData.length) googleMap.setZoom(16);\n                }\n\n                odpData.forEach((data: ODP, i: number) => {\n                    let color: string;\n                    switch (data.status) {\n                        case \"RED\":\n                            color = \"red\";\n                            break;\n                        case \"YELLOW\":\n                            color = \"yellow\";\n                            break;\n                        case \"GREEN\":\n                            color = \"green\";\n                            break;\n                        default:\n                            color = \"black\";\n                    }\n\n                    odpMarker.push(\n                        new window.google.maps.Marker({\n                            map: googleMap,\n                            position: { lat: data.latitude, lng: data.longitude },\n                            icon: {\n                                path: window.google.maps.SymbolPath.CIRCLE,\n                                scale: 6,\n                                fillColor: color,\n                                fillOpacity: 0.9,\n                                strokeWeight: 0,\n                            },\n                        })\n                    );\n\n                    odpMarker[i].latlng = { lat: data.latitude, lng: data.longitude };\n                    odpMarker[i].index = i;\n                    odpMarker[i].distance = window.google.maps.geometry.spherical.computeDistanceBetween(\n                        marker.getPosition(),\n                        odpMarker[i].getPosition()\n                    );\n\n                    let content = `\n                    <div class=\"map-infowindow\">\n                        <span>Device ID: ${data.id}</span><br/>\n                        <span>Device name: ${data.name}</span><br/>\n                        <span>Status: ${data.status}</span><br/>\n                        <span>Device Port: ${data.device_port}</span><br/>\n                        <span>Idle Port: ${data.idle_port}</span>\n                        <span id=\"infoDistance\"></span>\n                    </div>`;\n\n                    odpMarker[i].infoWindow = new window.google.maps.InfoWindow({\n                        content: content,\n                        zIndex: 2,\n                    });\n\n                    odpMarker[i].addListener(\"mouseover\", () => {\n                        if (source == 3) {\n                            setUnderspec(data.underspec_detail);\n                        }\n\n                        infoWindow.close();\n                        odpMarker.map((x) => x.infoWindow.close());\n                        odpMarker[i].infoWindow.open(googleMap, odpMarker[i]);\n                    });\n\n                    odpMarker[i].addListener(\"mouseout\", () => {\n                        if (source == 3) {\n                            setUnderspec([]);\n                        }\n                        odpMarker[i].infoWindow.close();\n                    });\n\n                    odpMarker[i].addListener(\"click\", () => {\n                        odpMarker.map((x) => x.infoWindow.close());\n                        odpMarker[i].infoWindow.open(googleMap, odpMarker[i]);\n                        directionsService.route(\n                            {\n                                origin: `${lat},${lng}`,\n                                destination: `${data.latitude},${data.longitude}`,\n                                travelMode: \"WALKING\",\n                            },\n                            (response, status) => {\n                                if (status === \"OK\") {\n                                    console.log(response.routes[0].legs[0].distance.value);\n                                    const info = document.getElementById(\"infoDistance\");\n                                    if (info) info.innerHTML = `<br/>Distance: ${response.routes[0].legs[0].distance.value} m`;\n                                    directionsRenderer.setMap(googleMap);\n                                    directionsRenderer.setDirections(response);\n                                } else {\n                                    console.log(\"Directions request failed due to \" + status);\n                                }\n                            }\n                        );\n                    });\n                });\n\n                const dataDistance = odpMarker\n                    .map((x) => {\n                        return { distance: x.distance, index: x.index, latlng: x.latlng };\n                    })\n                    .sort((a, b) => a.distance - b.distance)\n                    .filter((x, i) => i < 3);\n                getDistance(dataDistance);\n            })\n            .catch((reject) => {\n                if (!axios.isCancel(reject)) {\n                    console.log(reject);\n                    setOdpStatus(\"Fetching ODP failed!\");\n                }\n            });\n    };\n\n    const getStreetList = (lat: number, lng: number) => {\n        setStreetStatus(\"Loading street data...\");\n\n        AxiosStreet({\n            url: \"https://siis-api.udata.id/point_to_address\",\n            method: \"post\",\n            data: { lat: lat.toString(), long: lng.toString(), radius: \"50\" },\n        })\n            .then((resolve) => {\n                if (resolve.data.status == \"success\") {\n                    const list = resolve.data.data.filter((x) => x.st_name != \" \").map((x) => titleCase(x.st_name));\n                    if (list.length > 0) {\n                        const uniqueList = [...new Set(list)];\n                        setStreetStatus(`${uniqueList.length} street${uniqueList.length > 1 ? \"s\" : \"\"} found`);\n                        setStreetList(uniqueList);\n                    } else {\n                        setStreetStatus(\"No street data found!\");\n                    }\n                } else {\n                    console.log(resolve.data);\n                    setStreetStatus(\"No street data found!\");\n                }\n            })\n            .catch((reject) => {\n                console.log(reject);\n                setStreetStatus(\"Fetching street data failed!\");\n            });\n    };\n\n    const getStreetName = (lat: number, lng: number) => {\n        return new Promise((resolve) => {\n            axios\n                .get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=AIzaSyCXU3EeZo0yexMDnmkigGJJvTvcVDpgPl0`)\n                .then((response) => {\n                    const streetFilter = response.data.results[0].address_components.filter((x) => x.types[0] == \"route\");\n                    if (streetFilter.length > 0) {\n                        resolve(`${streetFilter[0].short_name}, `);\n                    } else {\n                        resolve(\"\");\n                    }\n                })\n                .catch(() => {\n                    resolve(\"\");\n                });\n        });\n    };\n\n    const getDistance = (data) => {\n        distanceMatrix.getDistanceMatrix(\n            {\n                origins: [marker.getPosition()],\n                destinations: data.map((x) => new window.google.maps.LatLng(x.latlng.lat, x.latlng.lng)),\n                travelMode: \"WALKING\",\n            },\n            (response, status) => {\n                if (status === \"OK\") {\n                    data.forEach((x, i) => {\n                        odpMarker[data[i].index].infoDistance = new window.google.maps.InfoWindow({\n                            content: `<div>\n\t\t\t\t\t\t\t<span>${response.rows[0].elements[i].distance.value} m</span>\n\t\t\t\t\t\t</div>`,\n                        });\n                        odpMarker[data[i].index].infoDistance.open(googleMap, odpMarker[data[i].index]);\n                    });\n                } else {\n                    console.log(\"Distances request failed due to \" + status);\n                }\n            }\n        );\n    };\n\n    const findMe = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                ({ coords }) => {\n                    if (inputRef.current) inputRef.current.value = \"\";\n                    const position = {\n                        lat: coords.latitude,\n                        lng: coords.longitude,\n                    };\n\n                    googleMap.setCenter(position);\n                    googleMap.setZoom(17);\n                    getLocation(coords.latitude, coords.longitude, radiusRef.current.value, parseInt(sourceRef.current.dataset.source));\n                },\n                () => {\n                    alert(\"The Geolocation service failed.\");\n                }\n            );\n        } else {\n            alert(\"Your browser doesn't support geolocation.\");\n        }\n    };\n\n    const savePolygon = () => {\n        let path = [];\n        if (customPolygon?.type == \"polygon\") {\n            const shape = customPolygon.shape.getPath().getArray();\n            path = shape.map((x) => {\n                return new window.google.maps.LatLng(x.lat(), x.lng());\n            });\n            drawingManager?.setDrawingMode(window.google.maps.drawing.OverlayType.POLYGON);\n        } else if (customPolygon?.type == \"rectangle\") {\n            const bounds = customPolygon.shape.getBounds();\n            var NE = bounds.getNorthEast();\n            var SW = bounds.getSouthWest();\n            path = [\n                new window.google.maps.LatLng(SW.lat(), NE.lng()),\n                bounds.getNorthEast(),\n                new window.google.maps.LatLng(NE.lat(), SW.lng()),\n                bounds.getSouthWest(),\n            ];\n            drawingManager?.setDrawingMode(window.google.maps.drawing.OverlayType.RECTANGLE);\n        }\n\n        const polygon = new window.google.maps.Polygon({\n            map: googleMap,\n            paths: path,\n            strokeColor: \"#FF3300\",\n            strokeWeight: 2,\n            fillOpacity: 0.5,\n            fillColor: \"#FF3300\",\n            clickable: true,\n        });\n\n        polygon.addListener(\"mouseover\", () => {\n            if (mapRef.current.dataset.mode == \"delete\") polygon.setOptions({ fillColor: \"#00FF00\" });\n        });\n        polygon.addListener(\"mouseout\", () => {\n            polygon.setOptions({ fillColor: \"#FF3300\" });\n        });\n        polygon.addListener(\"click\", () => {\n            if (mapRef.current.dataset.mode == \"delete\") polygon.setMap(null);\n        });\n\n        customPolygon?.shape.setMap(null);\n        if (customPolygon) polygonSaved.push(polygon);\n        setShowSave(false);\n    };\n\n    return (\n        <div className=\"map-page\">\n            <div className=\"map-container\" ref={mapRef} data-mode={mode} />\n\n            <Menu\n                inputRef={inputRef}\n                radiusRef={radiusRef}\n                radius={radius}\n                setRadius={(e: number) => {\n                    setRadius(e);\n                }}\n                source={source}\n                setSource={(e: number) => {\n                    setSource(e);\n                }}\n                sourceRef={sourceRef}\n                hide={mode == \"normal\" ? false : true}\n            />\n            <Info\n                infoRef={infoRef}\n                locationName={locationName}\n                status={status}\n                odpStatus={odpStatus}\n                loading={loading}\n                hide={mode == \"normal\" && status ? false : true}\n            />\n            <Button findMe={findMe} hide={mode == \"normal\" ? false : true} />\n            <Editor mode={mode} />\n            <Save hide={showSave ? false : true} />\n            <Underspec underspec={underspec} hide={underspec.length ? false : true} />\n            <StreetList\n                streetList={streetList}\n                status={streetStatus}\n                ref={streetRef}\n                hide={mode == \"normal\" && status && streetStatus ? false : true}\n            />\n\n            <ReactTooltip effect=\"solid\" place=\"left\" />\n        </div>\n    );\n};\n\ndeclare global {\n    interface Window {\n        google: any;\n    }\n}\n\ninterface ODP {\n    id: string;\n    name: string;\n    latitude: number;\n    longitude: number;\n    status: string;\n    device_port: number;\n    idle_port: number;\n    underspec_detail?: Underspec[];\n}\ninterface Underspec {\n    inet: string;\n    olt_rx_pwr: string;\n    onu_rx_pwr: string;\n}\n\nexport default MapComponent;\n"],"sourceRoot":""}