{"version":3,"sources":["webpack:///./src/images/my_location.png","webpack:///./src/styles/MapsDesktop.css?6283","webpack:///./src/styles/MapsDesktop.css","webpack:///./src/pages/MapsDesktop.tsx"],"names":["api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","AxiosLocation","AxiosCancelRequest","axios","AxiosDirection","center","lat","lng","MapComponent","googleMap","marker","infoWindow","polygon","autoComplete","directionsService","directionsRenderer","mapRef","useRef","inputRef","inputLatLng","radiusRef","useState","inputLat","setInputLat","inputLng","setInputLng","inputRadius","setInputRadius","searchName","setSearchName","odpMarker","useEffect","googleScript","document","createElement","src","process","window","body","appendChild","addEventListener","google","maps","Map","current","zoom","clickableIcons","fullscreenControl","mapTypeControl","gestureHandling","mapTypeControlOptions","position","ControlPosition","BOTTOM_CENTER","Marker","map","draggable","visible","InfoWindow","inputElement","getElementById","places","Autocomplete","fields","types","componentRestrictions","country","bindTo","Polygon","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","DirectionsService","DirectionsRenderer","suppressMarkers","preserveViewport","searchBar","getElementsByClassName","findMeIcon","radiusSlider","controls","TOP_LEFT","RIGHT_BOTTOM","mapEventListener","getLocation","x","setMap","url","then","resolve","polygonLayer","data","shape","slice","split","parseFloat","setPath","parentElement","provinsi","kabupaten","kecamatan","kelurahan","child","innerHTML","insertAdjacentHTML","getDirection","reject","isCancel","console","log","setContent","getPosition","value","method","long","radius","auth","username","password","odpData","features","filter","attributes","portidlenumber","odpPercent","length","devicePort","deviceportnumber","reduce","acc","idlePort","toFixed","setCenter","setZoom","forEach","color","status_occ_add","icon","path","SymbolPath","CIRCLE","scale","device_id","devicename","addListener","close","open","route","origin","destination","travelMode","response","status","setDirections","alert","event","place","getPlace","geometry","location","viewport","fitBounds","setPosition","setVisible","getMap","e","latLng","preventDefault","element","querySelectorAll","panTo","className","ref","onClick","id","placeholder","style","display","onChange","target","test","type","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","my_location","alt","min","max","step"],"mappings":"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","file":"2.bundle.js","sourcesContent":["export default __webpack_public_path__ + \"src/images/my_location.png\";","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!./MapsDesktop.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".map-page {\\n\\twidth: 100vw;\\n\\theight: 100vh;\\n}\\n.map-container {\\n\\twidth: 100%;\\n\\theight: 100%;\\n}\\n\\n.map-search-bar {\\n\\tposition: fixed;\\n\\tmargin-top: 10px;\\n\\tmargin-left: 10px;\\n\\tmax-width: 200px;\\n\\twidth: 70%;\\n\\theight: max-content;\\n\\tbackground: white;\\n\\tborder-radius: 3px;\\n}\\n.map-search-option {\\n\\tbox-sizing: border-box;\\n\\tcursor: pointer;\\n\\tbackground-color: whitesmoke;\\n\\tcolor: gray;\\n\\tdisplay: grid;\\n\\tgrid-template-columns: 1fr 1fr;\\n}\\n.map-search-option div {\\n\\theight: 30px;\\n\\tline-height: 30px;\\n\\ttext-align: center;\\n}\\n.map-search-option div.active {\\n\\tbackground-color: white;\\n\\tcolor: black;\\n}\\n\\n#map-search-name {\\n\\twidth: 100%;\\n\\tbox-sizing: border-box;\\n}\\n\\n#map-popup {\\n\\twidth: max-content;\\n\\theight: max-content;\\n}\\n#map-popup span {\\n\\ttext-align: center;\\n\\tdisplay: block;\\n}\\n#map-popup-edit {\\n\\tmargin-top: 5px;\\n\\tcolor: blue;\\n\\tcursor: pointer;\\n}\\n\\n#map-form {\\n\\tdisplay: grid;\\n\\tgrid-template-columns: 1fr;\\n}\\n#map-form label {\\n\\tdisplay: block;\\n\\tmargin: 5px;\\n}\\n#map-form button {\\n\\tmargin-top: 15px;\\n}\\n\\n.map-input-bg {\\n\\tposition: fixed;\\n\\ttop: 0;\\n\\tleft: 0;\\n\\twidth: 0;\\n\\theight: 0;\\n\\tbackground-color: rgba(0, 0, 0, 0.5);\\n}\\n.map-input-bg.show {\\n\\twidth: 100%;\\n\\theight: 100%;\\n}\\n.map-find-me {\\n\\tposition: fixed;\\n\\tbackground-color: white;\\n\\tmargin-right: 12px;\\n}\\n.map-radius-slider {\\n\\tbackground-color: white;\\n\\tposition: fixed;\\n\\tmargin-top: 10px;\\n\\tmargin-left: 10px;\\n}\\n#map-input-form {\\n\\tposition: fixed;\\n\\tdisplay: none;\\n\\tgrid-template-columns: 1fr;\\n\\tbackground-color: white;\\n\\tborder-radius: 5px;\\n\\tpadding: 15px;\\n\\ttop: 60%;\\n\\tleft: 50%;\\n\\ttransform: translate(-50%, -50%);\\n\\topacity: 0;\\n\\ttransition: 0.3s;\\n}\\n#map-input-form.show {\\n\\ttop: 50%;\\n\\topacity: 1;\\n}\\n#map-input-form input {\\n\\ttext-transform: uppercase;\\n}\\n#map-input-form label {\\n\\tdisplay: block;\\n\\tmargin: 7px;\\n}\\n#map-input-form button {\\n\\tmargin-top: 15px;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useRef, useEffect } from \"react\";\nimport axios from \"axios\";\nimport AxiosCancelRequest from \"axios-cancel-request\";\nimport \"../styles/MapsDesktop.css\";\nimport my_location from \"../images/my_location.png\";\nconst AxiosLocation = AxiosCancelRequest(axios);\nconst AxiosDirection = AxiosCancelRequest(axios);\nconst center = {\n\tlat: -6.2088,\n\tlng: 106.8456,\n};\n\nconst MapComponent = () => {\n\tconst mapRef = useRef<HTMLDivElement>(null);\n\tconst inputRef = useRef<HTMLInputElement>(null);\n\tconst inputLatLng = useRef<HTMLFormElement>(null);\n\tconst radiusRef = useRef<HTMLInputElement>(null);\n\tconst [inputLat, setInputLat] = useState(\"\");\n\tconst [inputLng, setInputLng] = useState(\"\");\n\tconst [inputRadius, setInputRadius] = useState(\"200\");\n\tconst [searchName, setSearchName] = useState(true);\n\n\t// Initialize an variables to call it later\n\tlet googleMap;\n\tlet marker;\n\tlet infoWindow;\n\tlet polygon;\n\tlet autoComplete;\n\tlet odpMarker = [];\n\tlet directionsService;\n\tlet directionsRenderer;\n\n\tuseEffect(() => {\n\t\t// Create script element and call google maps api\n\t\tconst googleScript = document.createElement(\"script\");\n\t\tgoogleScript.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.GOOGLE_API}&libraries=places,geometry`;\n\t\twindow.document.body.appendChild(googleScript);\n\n\t\tgoogleScript.addEventListener(\"load\", async () => {\n\t\t\t// Maps initialize\n\t\t\tgoogleMap = new window.google.maps.Map(mapRef.current, {\n\t\t\t\tzoom: 15,\n\t\t\t\tcenter: center,\n\t\t\t\tclickableIcons: false,\n\t\t\t\tfullscreenControl: false,\n\t\t\t\tmapTypeControl: true,\n\t\t\t\tgestureHandling: \"greedy\",\n\t\t\t\tmapTypeControlOptions: {\n\t\t\t\t\tposition: window.google.maps.ControlPosition.BOTTOM_CENTER,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t// Marker initialize\n\t\t\tmarker = new window.google.maps.Marker({\n\t\t\t\tmap: googleMap,\n\t\t\t\tdraggable: true,\n\t\t\t\tvisible: false,\n\t\t\t\t// icon: {\n\t\t\t\t// \turl: pin_marker,\n\t\t\t\t// \tsize: new window.google.maps.Size(42, 50),\n\t\t\t\t// \torigin: new window.google.maps.Point(0, 0),\n\t\t\t\t// \tanchor: new window.google.maps.Point(21, 47),\n\t\t\t\t// },\n\t\t\t});\n\n\t\t\t// InfoWindow initialize\n\t\t\tinfoWindow = new window.google.maps.InfoWindow();\n\n\t\t\t// AutoComplete initialize, cannot use useRef to get element\n\t\t\tconst inputElement = document.getElementById(\"map-search-name\");\n\t\t\tautoComplete = new window.google.maps.places.Autocomplete(inputElement, {\n\t\t\t\tfields: [\"geometry\", \"name\"],\n\t\t\t\ttypes: [\"geocode\"],\n\t\t\t\tcomponentRestrictions: { country: [\"id\"] },\n\t\t\t});\n\t\t\tautoComplete.bindTo(\"bounds\", googleMap);\n\n\t\t\t// Polygon initialize\n\t\t\tpolygon = new window.google.maps.Polygon({\n\t\t\t\tmap: googleMap,\n\t\t\t\tpaths: [],\n\t\t\t\tstrokeColor: \"#FF0000\",\n\t\t\t\tstrokeOpacity: 0.5,\n\t\t\t\tstrokeWeight: 2,\n\t\t\t\tfillColor: \"#FF0000\",\n\t\t\t\tfillOpacity: 0.1,\n\t\t\t\tclickable: false,\n\t\t\t});\n\n\t\t\t// Directions initialize\n\t\t\tdirectionsService = new window.google.maps.DirectionsService();\n\t\t\tdirectionsRenderer = new window.google.maps.DirectionsRenderer({\n\t\t\t\tsuppressMarkers: true,\n\t\t\t\tpreserveViewport: true,\n\t\t\t});\n\n\t\t\tconst searchBar = document.getElementsByClassName(\"map-search-bar\")[0];\n\t\t\tconst findMeIcon = document.getElementsByClassName(\"map-find-me\")[0];\n\t\t\tconst radiusSlider = document.getElementsByClassName(\"map-radius-slider\")[0];\n\t\t\tgoogleMap.controls[window.google.maps.ControlPosition.TOP_LEFT].push(searchBar);\n\t\t\tgoogleMap.controls[window.google.maps.ControlPosition.RIGHT_BOTTOM].push(findMeIcon);\n\t\t\tgoogleMap.controls[window.google.maps.ControlPosition.TOP_LEFT].push(radiusSlider);\n\n\t\t\tmapEventListener();\n\t\t});\n\t}, []);\n\n\tconst getLocation = (lat: number, lng: number) => {\n\t\todpMarker.map((x) => x.setMap(null));\n\t\tif (directionsRenderer) directionsRenderer.setMap(null);\n\n\t\tAxiosLocation({ url: `https://siis-api.udata.id/point_kelurahan/${lng},${lat}` })\n\t\t\t.then((resolve) => {\n\t\t\t\tconst polygonLayer = resolve.data.data[0].shape\n\t\t\t\t\t.slice(11, -2)\n\t\t\t\t\t.split(\", \")\n\t\t\t\t\t.map((x: string) => {\n\t\t\t\t\t\tconst split = x.split(\" \");\n\t\t\t\t\t\treturn { lat: parseFloat(split[1]), lng: parseFloat(split[0]) };\n\t\t\t\t\t});\n\t\t\t\tpolygon.setPath(polygonLayer);\n\t\t\t\tpolygon.setMap(googleMap);\n\n\t\t\t\t// Cannot use React Element to create custom popup, must using string\n\t\t\t\tconst parentElement = document.getElementById(\"map-popup\");\n\t\t\t\tif (parentElement) {\n\t\t\t\t\tconst { provinsi, kabupaten, kecamatan, kelurahan } = resolve.data.data[0];\n\t\t\t\t\tconst child = `\n\t\t\t\t<div>\n\t\t\t\t\t<span>${provinsi}</span>\n\t\t\t\t\t<span>${kabupaten}</span>\n\t\t\t\t\t<span>${kecamatan}</span>\n\t\t\t\t\t<span>${kelurahan}</span><br/>\n\t\t\t\t\t<span id=\"map-popup-odp-loading\">Fetching ODP data...</span>\n\t\t\t\t</div>`;\n\n\t\t\t\t\tparentElement.innerHTML = \"\";\n\t\t\t\t\tparentElement.insertAdjacentHTML(\"beforeend\", child);\n\t\t\t\t}\n\n\t\t\t\tgetDirection(lat, lng);\n\t\t\t})\n\t\t\t.catch((reject) => {\n\t\t\t\tif (!axios.isCancel(reject)) {\n\t\t\t\t\tconsole.log(reject);\n\t\t\t\t\tconst parentElement = document.getElementById(\"map-popup\");\n\t\t\t\t\tconst child = `\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>Fetching failed !</div>\n\t\t\t\t\t\t<span id=\"map-popup-edit\">Try again...</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t`;\n\n\t\t\t\t\tparentElement.innerHTML = \"\";\n\t\t\t\t\tparentElement.insertAdjacentHTML(\"beforeend\", child);\n\t\t\t\t\tdocument.getElementById(\"map-popup-edit\").addEventListener(\"click\", () => {\n\t\t\t\t\t\tinfoWindow.setContent(`<div id=\"map-popup\">Fetching again...</div>`);\n\t\t\t\t\t\tconst position = marker.getPosition();\n\t\t\t\t\t\tgetLocation(position.lat(), position.lng());\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tconst getDirection = (lat: number, lng: number): void => {\n\t\tconsole.log(radiusRef.current.value);\n\t\tAxiosDirection({ url: \"http://digitasi-consumer-siis-dev.vsan-apps.playcourt.id/api/siis/v1/get-odp\", method: \"post\", data: { lat: lat, long: lng, radius: radiusRef.current.value }, auth: { username: \"telkom\", password: process.env.ODP_PASSWORD } })\n\t\t\t.then((resolve) => {\n\t\t\t\tconst odpData = resolve.data.data.features.filter((x) => x.attributes.portidlenumber > 0);\n\t\t\t\tlet odpPercent = 0;\n\t\t\t\tif (odpData.length) {\n\t\t\t\t\tconst devicePort = odpData.map((x) => x.attributes.deviceportnumber).reduce((acc, x) => acc + x);\n\t\t\t\t\tconst idlePort = odpData.map((x) => x.attributes.portidlenumber).reduce((acc, x) => acc + x);\n\t\t\t\t\todpPercent = parseFloat(((idlePort / devicePort) * 100).toFixed(1));\n\t\t\t\t}\n\t\t\t\tconst loading = document.getElementById(\"map-popup-odp-loading\");\n\t\t\t\tloading.innerHTML = `${odpData.length} ODP found (${odpPercent}%)`;\n\t\t\t\todpMarker = [];\n\t\t\t\tgoogleMap.setCenter({ lat: lat, lng: lng });\n\t\t\t\tif (odpData.length) googleMap.setZoom(17);\n\n\t\t\t\todpData.forEach((x, i) => {\n\t\t\t\t\tconst data = x.attributes;\n\t\t\t\t\tlet color: string;\n\t\t\t\t\tswitch (data.status_occ_add) {\n\t\t\t\t\t\tcase \"RED\":\n\t\t\t\t\t\t\tcolor = \"red\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"YELLOW\":\n\t\t\t\t\t\t\tcolor = \"yellow\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"GREEN\":\n\t\t\t\t\t\t\tcolor = \"green\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tcolor = \"black\";\n\t\t\t\t\t}\n\n\t\t\t\t\todpMarker.push(\n\t\t\t\t\t\tnew window.google.maps.Marker({\n\t\t\t\t\t\t\tmap: googleMap,\n\t\t\t\t\t\t\tposition: { lat: data.lat, lng: data.long },\n\t\t\t\t\t\t\ticon: {\n\t\t\t\t\t\t\t\tpath: window.google.maps.SymbolPath.CIRCLE,\n\t\t\t\t\t\t\t\tscale: 6,\n\t\t\t\t\t\t\t\tfillColor: color,\n\t\t\t\t\t\t\t\tfillOpacity: 0.9,\n\t\t\t\t\t\t\t\tstrokeWeight: 0,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\n\t\t\t\t\todpMarker[i].infoWindow = new window.google.maps.InfoWindow({\n\t\t\t\t\t\tcontent: `<div>\n\t\t\t\t\t\t<span>Latitude: ${data.lat}</span><br/>\n\t\t\t\t\t\t<span>Longitude: ${data.long}</span><br/>\n\t\t\t\t\t\t<span>Device ID: ${data.device_id}</span><br/>\n\t\t\t\t\t\t<span>Device name: ${data.devicename}</span><br/>\n\t\t\t\t\t\t<span>Status: ${data.status_occ_add}</span><br/>\n\t\t\t\t\t\t<span>Port number: ${data.deviceportnumber}</span><br/>\n\t\t\t\t\t\t<span>Idle port: ${data.portidlenumber}</span>\n\t\t\t\t\t</div>`,\n\t\t\t\t\t});\n\n\t\t\t\t\todpMarker[i].addListener(\"mouseover\", () => {\n\t\t\t\t\t\tinfoWindow.close();\n\t\t\t\t\t\todpMarker.map((x) => x.infoWindow.close());\n\t\t\t\t\t\todpMarker[i].infoWindow.open(googleMap, odpMarker[i]);\n\t\t\t\t\t});\n\n\t\t\t\t\todpMarker[i].addListener(\"mouseout\", () => {\n\t\t\t\t\t\todpMarker[i].infoWindow.close();\n\t\t\t\t\t});\n\n\t\t\t\t\todpMarker[i].addListener(\"click\", () => {\n\t\t\t\t\t\tinfoWindow.close();\n\t\t\t\t\t\todpMarker.map((x) => x.infoWindow.close());\n\t\t\t\t\t\todpMarker[i].infoWindow.open(googleMap, odpMarker[i]);\n\t\t\t\t\t\tdirectionsService.route(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\torigin: `${lat},${lng}`,\n\t\t\t\t\t\t\t\tdestination: `${data.lat},${data.long}`,\n\t\t\t\t\t\t\t\ttravelMode: \"WALKING\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(response, status) => {\n\t\t\t\t\t\t\t\tif (status === \"OK\") {\n\t\t\t\t\t\t\t\t\tdirectionsRenderer.setMap(googleMap);\n\t\t\t\t\t\t\t\t\tdirectionsRenderer.setDirections(response);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\twindow.alert(\"Directions request failed due to \" + status);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((reject) => {\n\t\t\t\tif (!axios.isCancel(reject)) {\n\t\t\t\t\tconsole.log(reject);\n\t\t\t\t\tconst loading = document.getElementById(\"map-popup-odp-loading\");\n\t\t\t\t\tloading.innerHTML = `Fetching ODP failed!`;\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tconst mapEventListener = (): void => {\n\t\twindow.google.maps.event.addListener(autoComplete, \"place_changed\", () => {\n\t\t\tconst place = autoComplete.getPlace();\n\t\t\tif (!place.geometry) {\n\t\t\t\talert(\"Quota exceeded!\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { location, viewport } = place.geometry;\n\t\t\tif (viewport) {\n\t\t\t\tgoogleMap.fitBounds(place.geometry.viewport);\n\t\t\t} else {\n\t\t\t\tgoogleMap.setCenter(place.geometry.location);\n\t\t\t\tgoogleMap.setZoom(16);\n\t\t\t}\n\n\t\t\tmarker.setPosition(location);\n\t\t\tmarker.setVisible(true);\n\n\t\t\tinfoWindow.setContent(`<div id=\"map-popup\">Fetching data...</div>`);\n\t\t\tinfoWindow.open(googleMap, marker);\n\n\t\t\tpolygon.setMap(null);\n\t\t\tgetLocation(location.lat(), location.lng());\n\t\t});\n\n\t\tmarker.addListener(\"click\", (): void => {\n\t\t\tif (!infoWindow.getMap()) {\n\t\t\t\tinfoWindow.open(googleMap, marker);\n\t\t\t}\n\t\t});\n\n\t\tmarker.addListener(\"mouseover\", (): void => {\n\t\t\todpMarker.map((x) => x.infoWindow.close());\n\t\t\tinfoWindow.open(googleMap, marker);\n\t\t});\n\n\t\tmarker.addListener(\"dragstart\", (): void => {\n\t\t\tinfoWindow.close();\n\t\t});\n\n\t\tmarker.addListener(\"dragend\", (): void => {\n\t\t\tconst location = marker.getPosition();\n\n\t\t\tinfoWindow.setContent(`<div id=\"map-popup\">Fetching data...</div>`);\n\t\t\tinfoWindow.open(googleMap, marker);\n\n\t\t\tpolygon.setMap(null);\n\t\t\tgetLocation(location.lat(), location.lng());\n\t\t});\n\n\t\tgoogleMap.addListener(\"click\", (e: any): void => {\n\t\t\tif (inputRef.current) inputRef.current.value = \"\";\n\n\t\t\tmarker.setPosition(e.latLng);\n\t\t\tmarker.setVisible(true);\n\n\t\t\tinfoWindow.setContent(`<div id=\"map-popup\">Fetching data...</div>`);\n\t\t\tinfoWindow.open(googleMap, marker);\n\n\t\t\tpolygon.setMap(null);\n\t\t\tgetLocation(e.latLng.lat(), e.latLng.lng());\n\t\t});\n\n\t\tinputLatLng.current.addEventListener(\"submit\", (e: Event): void => {\n\t\t\te.preventDefault();\n\n\t\t\t// Cannot use React state, must using traditional way to get value\n\t\t\tconst element = inputLatLng.current.querySelectorAll(\"input\");\n\t\t\tconst location = {\n\t\t\t\tlat: parseFloat(element[0].value) || 0,\n\t\t\t\tlng: parseFloat(element[1].value) || 0,\n\t\t\t};\n\n\t\t\tmarker.setPosition(location);\n\t\t\tmarker.setVisible(true);\n\t\t\tgoogleMap.panTo(location);\n\n\t\t\tinfoWindow.setContent(`<div id=\"map-popup\">Fetching data...</div>`);\n\t\t\tinfoWindow.open(googleMap, marker);\n\n\t\t\tgetLocation(location.lat, location.lng);\n\t\t});\n\t};\n\n\tconst findMe = () => {\n\t\tif (navigator.geolocation) {\n\t\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\t\t({ coords }) => {\n\t\t\t\t\tif (inputRef.current) inputRef.current.value = \"\";\n\t\t\t\t\tconst position = {\n\t\t\t\t\t\tlat: coords.latitude,\n\t\t\t\t\t\tlng: coords.longitude,\n\t\t\t\t\t};\n\n\t\t\t\t\tmarker.setPosition(position);\n\t\t\t\t\tmarker.setVisible(true);\n\n\t\t\t\t\tinfoWindow.setContent(`<div id=\"map-popup\">Fetching data...</div>`);\n\t\t\t\t\tinfoWindow.open(googleMap, marker);\n\t\t\t\t\tpolygon.setMap(null);\n\n\t\t\t\t\tgoogleMap.setCenter(position);\n\t\t\t\t\tgoogleMap.setZoom(17);\n\n\t\t\t\t\tgetLocation(coords.latitude, coords.longitude);\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\talert(\"The Geolocation service failed.\");\n\t\t\t\t},\n\t\t\t);\n\t\t} else {\n\t\t\talert(\"Your browser doesn't support geolocation.\");\n\t\t}\n\t};\n\n\tconst onChangeLat = (value?: string): void => {\n\t\tconst regex = /^[0-9.-]*$/;\n\t\tif (regex.test(value)) {\n\t\t\tsetInputLat(value);\n\t\t}\n\t};\n\tconst onChangeLng = (value?: string): void => {\n\t\tconst regex = /^[0-9.-]*$/;\n\t\tif (regex.test(value)) {\n\t\t\tsetInputLng(value);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"map-page\">\n\t\t\t<div className=\"map-container\" ref={mapRef} />\n\t\t\t<div className=\"map-search-bar\">\n\t\t\t\t<div className=\"map-search-option\">\n\t\t\t\t\t<div onClick={() => setSearchName(true)} className={searchName ? \"active\" : \"\"}>\n\t\t\t\t\t\tSearch by name\n\t\t\t\t\t</div>\n\t\t\t\t\t<div onClick={() => setSearchName(false)} className={searchName ? \"\" : \"active\"}>\n\t\t\t\t\t\tSearch by latlong\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<input id=\"map-search-name\" ref={inputRef} placeholder=\"Search here...\" style={{ display: searchName ? \"inline-block\" : \"none\" }} />\n\t\t\t\t<form ref={inputLatLng} style={{ display: !searchName ? \"block\" : \"none\" }}>\n\t\t\t\t\t<input placeholder=\"Latitude\" value={inputLat} onChange={(e) => onChangeLat(e.target.value)} />\n\t\t\t\t\t<br />\n\t\t\t\t\t<input placeholder=\"Longitude\" value={inputLng} onChange={(e) => onChangeLng(e.target.value)} />\n\t\t\t\t\t<button type=\"submit\">Search</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<div className=\"map-find-me\" onClick={findMe}>\n\t\t\t\t<img src={my_location} alt=\"find_me\" />\n\t\t\t</div>\n\t\t\t<div className=\"map-radius-slider\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tref={radiusRef}\n\t\t\t\t\tmin=\"100\"\n\t\t\t\t\tmax=\"300\"\n\t\t\t\t\tstep=\"25\"\n\t\t\t\t\tvalue={inputRadius}\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetInputRadius(e.target.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<span>Radius: {inputRadius}</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\ndeclare global {\n\tinterface Window {\n\t\tgoogle: any;\n\t}\n}\n\nexport default MapComponent;\n"],"sourceRoot":""}