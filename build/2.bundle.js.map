{"version":3,"sources":["webpack:///./src/images/my_location.png","webpack:///./src/styles/MapsDesktop.css?6283","webpack:///./src/styles/MapsDesktop.css","webpack:///./src/pages/MapsDesktop.tsx"],"names":["api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","AxiosLocation","AxiosCancelRequest","axios","AxiosDirection","center","lat","lng","MapComponent","googleMap","marker","infoWindow","circle","polygon","autoComplete","directionsService","directionsRenderer","distanceMatrix","mapRef","useRef","inputRef","inputLatLng","radiusRef","useState","inputLat","setInputLat","inputLng","setInputLng","inputRadius","setInputRadius","searchName","setSearchName","odpMarker","useEffect","googleScript","document","createElement","src","process","window","body","appendChild","addEventListener","google","maps","Map","current","zoom","clickableIcons","fullscreenControl","mapTypeControl","gestureHandling","mapTypeControlOptions","position","ControlPosition","BOTTOM_CENTER","Marker","map","draggable","visible","InfoWindow","inputElement","getElementById","places","Autocomplete","fields","types","componentRestrictions","country","bindTo","Circle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","Polygon","paths","DirectionsService","DirectionsRenderer","suppressMarkers","preserveViewport","DistanceMatrixService","searchBar","getElementsByClassName","findMeIcon","radiusSlider","controls","TOP_LEFT","RIGHT_BOTTOM","mapEventListener","getLocation","x","setMap","setPosition","setVisible","setContent","open","setCenter","setRadius","parseFloat","value","url","then","resolve","polygonLayer","data","shape","slice","split","setPath","parentElement","provinsi","kabupaten","kecamatan","kelurahan","child","innerHTML","insertAdjacentHTML","getDirection","reject","isCancel","console","log","getPosition","method","long","radius","auth","username","password","odpData","features","filter","attributes","portidlenumber","odpPercent","length","devicePort","deviceportnumber","reduce","acc","idlePort","toFixed","setZoom","forEach","color","status_occ_add","icon","path","SymbolPath","CIRCLE","scale","latlng","index","distance","geometry","spherical","computeDistanceBetween","device_id","devicename","addListener","close","route","origin","destination","travelMode","response","status","setDirections","alert","dataDistance","sort","a","b","getDistance","getDistanceMatrix","origins","destinations","LatLng","infoDistance","rows","elements","event","place","getPlace","location","viewport","fitBounds","getMap","e","latLng","preventDefault","element","querySelectorAll","className","ref","onClick","id","placeholder","style","display","onChange","target","test","type","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","my_location","alt","min","max","step"],"mappings":"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","file":"2.bundle.js","sourcesContent":["export default __webpack_public_path__ + \"src/images/my_location.png\";","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!./MapsDesktop.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".map-page {\\n\\twidth: 100vw;\\n\\theight: 100vh;\\n}\\n.map-container {\\n\\twidth: 100%;\\n\\theight: 100%;\\n}\\n\\n.map-search-bar {\\n\\tposition: fixed;\\n\\tmargin-top: 10px;\\n\\tmargin-left: 10px;\\n\\tmax-width: 200px;\\n\\twidth: 70%;\\n\\theight: max-content;\\n\\tbackground: white;\\n\\tborder-radius: 3px;\\n}\\n.map-search-option {\\n\\tbox-sizing: border-box;\\n\\tcursor: pointer;\\n\\tbackground-color: whitesmoke;\\n\\tcolor: gray;\\n\\tdisplay: grid;\\n\\tgrid-template-columns: 1fr 1fr;\\n}\\n.map-search-option div {\\n\\theight: 30px;\\n\\tline-height: 30px;\\n\\ttext-align: center;\\n}\\n.map-search-option div.active {\\n\\tbackground-color: white;\\n\\tcolor: black;\\n}\\n\\n#map-search-name {\\n\\twidth: 100%;\\n\\tbox-sizing: border-box;\\n}\\n\\n#map-popup {\\n\\twidth: max-content;\\n\\theight: max-content;\\n}\\n#map-popup span {\\n\\ttext-align: center;\\n\\tdisplay: block;\\n}\\n#map-popup-edit {\\n\\tmargin-top: 5px;\\n\\tcolor: blue;\\n\\tcursor: pointer;\\n}\\n\\n#map-form {\\n\\tdisplay: grid;\\n\\tgrid-template-columns: 1fr;\\n}\\n#map-form label {\\n\\tdisplay: block;\\n\\tmargin: 5px;\\n}\\n#map-form button {\\n\\tmargin-top: 15px;\\n}\\n\\n.map-input-bg {\\n\\tposition: fixed;\\n\\ttop: 0;\\n\\tleft: 0;\\n\\twidth: 0;\\n\\theight: 0;\\n\\tbackground-color: rgba(0, 0, 0, 0.5);\\n}\\n.map-input-bg.show {\\n\\twidth: 100%;\\n\\theight: 100%;\\n}\\n.map-find-me {\\n\\tposition: fixed;\\n\\tbackground-color: white;\\n\\tmargin-right: 12px;\\n}\\n.map-radius-slider {\\n\\tbackground-color: white;\\n\\tposition: fixed;\\n\\tmargin-top: 10px;\\n\\tmargin-left: 10px;\\n}\\n#map-input-form {\\n\\tposition: fixed;\\n\\tdisplay: none;\\n\\tgrid-template-columns: 1fr;\\n\\tbackground-color: white;\\n\\tborder-radius: 5px;\\n\\tpadding: 15px;\\n\\ttop: 60%;\\n\\tleft: 50%;\\n\\ttransform: translate(-50%, -50%);\\n\\topacity: 0;\\n\\ttransition: 0.3s;\\n}\\n#map-input-form.show {\\n\\ttop: 50%;\\n\\topacity: 1;\\n}\\n#map-input-form input {\\n\\ttext-transform: uppercase;\\n}\\n#map-input-form label {\\n\\tdisplay: block;\\n\\tmargin: 7px;\\n}\\n#map-input-form button {\\n\\tmargin-top: 15px;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useRef, useEffect } from \"react\";\nimport axios from \"axios\";\nimport AxiosCancelRequest from \"axios-cancel-request\";\nimport \"../styles/MapsDesktop.css\";\nimport my_location from \"../images/my_location.png\";\nconst AxiosLocation = AxiosCancelRequest(axios);\nconst AxiosDirection = AxiosCancelRequest(axios);\nconst center = {\n\tlat: -6.2088,\n\tlng: 106.8456,\n};\n\nconst MapComponent = () => {\n\tconst mapRef = useRef<HTMLDivElement>(null);\n\tconst inputRef = useRef<HTMLInputElement>(null);\n\tconst inputLatLng = useRef<HTMLFormElement>(null);\n\tconst radiusRef = useRef<HTMLInputElement>(null);\n\tconst [inputLat, setInputLat] = useState(\"\");\n\tconst [inputLng, setInputLng] = useState(\"\");\n\tconst [inputRadius, setInputRadius] = useState(\"200\");\n\tconst [searchName, setSearchName] = useState(true);\n\n\t// Initialize an variables to call it later\n\tlet googleMap;\n\tlet marker;\n\tlet infoWindow;\n\tlet circle;\n\tlet polygon;\n\tlet autoComplete;\n\tlet odpMarker = [];\n\tlet directionsService;\n\tlet directionsRenderer;\n\tlet distanceMatrix;\n\n\tuseEffect(() => {\n\t\t// Create script element and call google maps api\n\t\tconst googleScript = document.createElement(\"script\");\n\t\tgoogleScript.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.GOOGLE_API}&libraries=places,geometry`;\n\t\twindow.document.body.appendChild(googleScript);\n\n\t\tgoogleScript.addEventListener(\"load\", async () => {\n\t\t\t// Maps initialize\n\t\t\tgoogleMap = new window.google.maps.Map(mapRef.current, {\n\t\t\t\tzoom: 15,\n\t\t\t\tcenter: center,\n\t\t\t\tclickableIcons: false,\n\t\t\t\tfullscreenControl: false,\n\t\t\t\tmapTypeControl: true,\n\t\t\t\tgestureHandling: \"greedy\",\n\t\t\t\tmapTypeControlOptions: {\n\t\t\t\t\tposition: window.google.maps.ControlPosition.BOTTOM_CENTER,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t// --- NOTE ---\n\t\t\t// You can't use React State inside window.google class,\n\t\t\t// so use traditional dom or React useRef\n\t\t\t// ------------\n\n\t\t\t// Marker initialize\n\t\t\tmarker = new window.google.maps.Marker({\n\t\t\t\tmap: googleMap,\n\t\t\t\tdraggable: true,\n\t\t\t\tvisible: false,\n\t\t\t});\n\n\t\t\t// InfoWindow initialize\n\t\t\tinfoWindow = new window.google.maps.InfoWindow();\n\n\t\t\t// AutoComplete initialize, cannot use useRef to get element\n\t\t\tconst inputElement = document.getElementById(\"map-search-name\");\n\t\t\tautoComplete = new window.google.maps.places.Autocomplete(inputElement, {\n\t\t\t\tfields: [\"geometry\", \"name\"],\n\t\t\t\ttypes: [\"geocode\"],\n\t\t\t\tcomponentRestrictions: { country: [\"id\"] },\n\t\t\t});\n\t\t\tautoComplete.bindTo(\"bounds\", googleMap);\n\n\t\t\t// Radius circle initialize\n\t\t\tcircle = new window.google.maps.Circle({\n\t\t\t\tmap: googleMap,\n\t\t\t\tstrokeColor: \"#FF0000\",\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t\tstrokeWeight: 0,\n\t\t\t\tfillColor: \"#FF0000\",\n\t\t\t\tfillOpacity: 0.2,\n\t\t\t\tclickable: false,\n\t\t\t});\n\n\t\t\t// Polygon initialize\n\t\t\tpolygon = new window.google.maps.Polygon({\n\t\t\t\tmap: googleMap,\n\t\t\t\tpaths: [],\n\t\t\t\tstrokeColor: \"#FF0000\",\n\t\t\t\tstrokeOpacity: 0.5,\n\t\t\t\tstrokeWeight: 2,\n\t\t\t\tfillColor: \"#FF0000\",\n\t\t\t\tfillOpacity: 0.1,\n\t\t\t\tclickable: false,\n\t\t\t});\n\n\t\t\t// Directions initialize\n\t\t\tdirectionsService = new window.google.maps.DirectionsService();\n\t\t\tdirectionsRenderer = new window.google.maps.DirectionsRenderer({\n\t\t\t\tsuppressMarkers: true,\n\t\t\t\tpreserveViewport: true,\n\t\t\t});\n\n\t\t\t// Distance Matrix initialize\n\t\t\tdistanceMatrix = new window.google.maps.DistanceMatrixService();\n\n\t\t\tconst searchBar = document.getElementsByClassName(\"map-search-bar\")[0];\n\t\t\tconst findMeIcon = document.getElementsByClassName(\"map-find-me\")[0];\n\t\t\tconst radiusSlider = document.getElementsByClassName(\"map-radius-slider\")[0];\n\t\t\tgoogleMap.controls[window.google.maps.ControlPosition.TOP_LEFT].push(searchBar);\n\t\t\tgoogleMap.controls[window.google.maps.ControlPosition.RIGHT_BOTTOM].push(findMeIcon);\n\t\t\tgoogleMap.controls[window.google.maps.ControlPosition.TOP_LEFT].push(radiusSlider);\n\n\t\t\tmapEventListener();\n\t\t});\n\t}, []);\n\n\tconst getLocation = (lat: number, lng: number) => {\n\t\todpMarker.map((x) => x.setMap(null));\n\t\tif (directionsRenderer) directionsRenderer.setMap(null);\n\n\t\tmarker.setPosition({ lat, lng });\n\t\tmarker.setVisible(true);\n\n\t\tinfoWindow.setContent(`<div id=\"map-popup\">Fetching data...</div>`);\n\t\tinfoWindow.open(googleMap, marker);\n\n\t\tpolygon.setMap(null);\n\t\tcircle.setMap(null);\n\t\tcircle.setMap(googleMap);\n\t\tcircle.setCenter({ lat, lng });\n\t\tcircle.setRadius(parseFloat(radiusRef.current.value));\n\n\t\tAxiosLocation({ url: `https://siis-api.udata.id/point_kelurahan/${lng},${lat}` })\n\t\t\t.then((resolve) => {\n\t\t\t\tconst polygonLayer = resolve.data.data[0].shape\n\t\t\t\t\t.slice(11, -2)\n\t\t\t\t\t.split(\", \")\n\t\t\t\t\t.map((x: string) => {\n\t\t\t\t\t\tconst split = x.split(\" \");\n\t\t\t\t\t\treturn { lat: parseFloat(split[1]), lng: parseFloat(split[0]) };\n\t\t\t\t\t});\n\t\t\t\tpolygon.setPath(polygonLayer);\n\t\t\t\tpolygon.setMap(googleMap);\n\n\t\t\t\t// Cannot use React Element to create custom popup, must using string\n\t\t\t\tconst parentElement = document.getElementById(\"map-popup\");\n\t\t\t\tif (parentElement) {\n\t\t\t\t\tconst { provinsi, kabupaten, kecamatan, kelurahan } = resolve.data.data[0];\n\t\t\t\t\tconst child = `\n\t\t\t\t<div>\n\t\t\t\t\t<span>${provinsi}</span>\n\t\t\t\t\t<span>${kabupaten}</span>\n\t\t\t\t\t<span>${kecamatan}</span>\n\t\t\t\t\t<span>${kelurahan}</span><br/>\n\t\t\t\t\t<span id=\"map-popup-odp-loading\">Fetching ODP data...</span>\n\t\t\t\t</div>`;\n\n\t\t\t\t\tparentElement.innerHTML = \"\";\n\t\t\t\t\tparentElement.insertAdjacentHTML(\"beforeend\", child);\n\t\t\t\t}\n\n\t\t\t\tgetDirection(lat, lng);\n\t\t\t})\n\t\t\t.catch((reject) => {\n\t\t\t\tif (!axios.isCancel(reject)) {\n\t\t\t\t\tconsole.log(reject);\n\t\t\t\t\tconst parentElement = document.getElementById(\"map-popup\");\n\t\t\t\t\tconst child = `\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>Fetching failed !</div>\n\t\t\t\t\t\t<span id=\"map-popup-edit\">Try again...</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t`;\n\n\t\t\t\t\tparentElement.innerHTML = \"\";\n\t\t\t\t\tparentElement.insertAdjacentHTML(\"beforeend\", child);\n\t\t\t\t\tdocument.getElementById(\"map-popup-edit\").addEventListener(\"click\", () => {\n\t\t\t\t\t\tinfoWindow.setContent(`<div id=\"map-popup\">Fetching again...</div>`);\n\t\t\t\t\t\tconst position = marker.getPosition();\n\t\t\t\t\t\tgetLocation(position.lat(), position.lng());\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tconst getDirection = (lat: number, lng: number): void => {\n\t\tAxiosDirection({ url: \"http://digitasi-consumer-siis-dev.vsan-apps.playcourt.id/api/siis/v1/get-odp\", method: \"post\", data: { lat: lat, long: lng, radius: radiusRef.current.value }, auth: { username: \"telkom\", password: process.env.ODP_PASSWORD } })\n\t\t\t.then((resolve) => {\n\t\t\t\tconst odpData = resolve.data.data.features.filter((x: ODP) => x.attributes.portidlenumber > 0);\n\t\t\t\tlet odpPercent = 0;\n\t\t\t\tif (odpData.length) {\n\t\t\t\t\tconst devicePort = odpData.map((x: ODP) => x.attributes.deviceportnumber).reduce((acc: number, x: number) => acc + x);\n\t\t\t\t\tconst idlePort = odpData.map((x: ODP) => x.attributes.portidlenumber).reduce((acc: number, x: number) => acc + x);\n\t\t\t\t\todpPercent = parseFloat(((idlePort / devicePort) * 100).toFixed(1));\n\t\t\t\t}\n\t\t\t\tconst loading = document.getElementById(\"map-popup-odp-loading\");\n\t\t\t\tloading.innerHTML = `${odpData.length} ODP found (${odpPercent}%)`;\n\t\t\t\todpMarker = [];\n\t\t\t\tgoogleMap.setCenter({ lat: lat, lng: lng });\n\t\t\t\tif (odpData.length) googleMap.setZoom(17);\n\n\t\t\t\todpData.forEach((x: ODP, i: number) => {\n\t\t\t\t\tconst data = x.attributes;\n\t\t\t\t\tlet color: string;\n\t\t\t\t\tswitch (data.status_occ_add) {\n\t\t\t\t\t\tcase \"RED\":\n\t\t\t\t\t\t\tcolor = \"red\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"YELLOW\":\n\t\t\t\t\t\t\tcolor = \"yellow\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"GREEN\":\n\t\t\t\t\t\t\tcolor = \"green\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tcolor = \"black\";\n\t\t\t\t\t}\n\n\t\t\t\t\todpMarker.push(\n\t\t\t\t\t\tnew window.google.maps.Marker({\n\t\t\t\t\t\t\tmap: googleMap,\n\t\t\t\t\t\t\tposition: { lat: data.lat, lng: data.long },\n\t\t\t\t\t\t\ticon: {\n\t\t\t\t\t\t\t\tpath: window.google.maps.SymbolPath.CIRCLE,\n\t\t\t\t\t\t\t\tscale: 6,\n\t\t\t\t\t\t\t\tfillColor: color,\n\t\t\t\t\t\t\t\tfillOpacity: 0.9,\n\t\t\t\t\t\t\t\tstrokeWeight: 0,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\n\t\t\t\t\todpMarker[i].latlng = { lat: data.lat, lng: data.long };\n\t\t\t\t\todpMarker[i].index = i;\n\t\t\t\t\todpMarker[i].distance = window.google.maps.geometry.spherical.computeDistanceBetween(marker.getPosition(), odpMarker[i].getPosition());\n\n\t\t\t\t\todpMarker[i].infoWindow = new window.google.maps.InfoWindow({\n\t\t\t\t\t\tcontent: `<div>\n\t\t\t\t\t\t<span>Latitude: ${data.lat}</span><br/>\n\t\t\t\t\t\t<span>Longitude: ${data.long}</span><br/>\n\t\t\t\t\t\t<span>Device ID: ${data.device_id}</span><br/>\n\t\t\t\t\t\t<span>Device name: ${data.devicename}</span><br/>\n\t\t\t\t\t\t<span>Status: ${data.status_occ_add}</span><br/>\n\t\t\t\t\t\t<span>Port number: ${data.deviceportnumber}</span><br/>\n\t\t\t\t\t\t<span>Idle port: ${data.portidlenumber}</span>\n\t\t\t\t\t</div>`,\n\t\t\t\t\t});\n\n\t\t\t\t\todpMarker[i].addListener(\"mouseover\", () => {\n\t\t\t\t\t\tinfoWindow.close();\n\t\t\t\t\t\todpMarker.map((x) => x.infoWindow.close());\n\t\t\t\t\t\todpMarker[i].infoWindow.open(googleMap, odpMarker[i]);\n\t\t\t\t\t});\n\n\t\t\t\t\todpMarker[i].addListener(\"mouseout\", () => {\n\t\t\t\t\t\todpMarker[i].infoWindow.close();\n\t\t\t\t\t});\n\n\t\t\t\t\todpMarker[i].addListener(\"click\", () => {\n\t\t\t\t\t\tinfoWindow.close();\n\t\t\t\t\t\todpMarker.map((x) => x.infoWindow.close());\n\t\t\t\t\t\todpMarker[i].infoWindow.open(googleMap, odpMarker[i]);\n\t\t\t\t\t\tdirectionsService.route(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\torigin: `${lat},${lng}`,\n\t\t\t\t\t\t\t\tdestination: `${data.lat},${data.long}`,\n\t\t\t\t\t\t\t\ttravelMode: \"WALKING\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(response, status) => {\n\t\t\t\t\t\t\t\tif (status === \"OK\") {\n\t\t\t\t\t\t\t\t\tdirectionsRenderer.setMap(googleMap);\n\t\t\t\t\t\t\t\t\tdirectionsRenderer.setDirections(response);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\twindow.alert(\"Directions request failed due to \" + status);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tconst dataDistance = odpMarker\n\t\t\t\t\t.map((x) => {\n\t\t\t\t\t\treturn { distance: x.distance, index: x.index, latlng: x.latlng };\n\t\t\t\t\t})\n\t\t\t\t\t.sort((a, b) => a.distance - b.distance)\n\t\t\t\t\t.filter((x, i) => i < 3);\n\t\t\t\tgetDistance(dataDistance);\n\t\t\t})\n\t\t\t.catch((reject) => {\n\t\t\t\tif (!axios.isCancel(reject)) {\n\t\t\t\t\tconsole.log(reject);\n\t\t\t\t\tconst loading = document.getElementById(\"map-popup-odp-loading\");\n\t\t\t\t\tloading.innerHTML = `Fetching ODP failed!`;\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tconst getDistance = (data) => {\n\t\tdistanceMatrix.getDistanceMatrix(\n\t\t\t{\n\t\t\t\torigins: [marker.getPosition()],\n\t\t\t\tdestinations: data.map((x) => new window.google.maps.LatLng(x.latlng.lat, x.latlng.lng)),\n\t\t\t\ttravelMode: \"WALKING\",\n\t\t\t},\n\t\t\t(response, status) => {\n\t\t\t\tif (status === \"OK\") {\n\t\t\t\t\tdata.forEach((x, i) => {\n\t\t\t\t\t\todpMarker[data[i].index].infoDistance = new window.google.maps.InfoWindow({\n\t\t\t\t\t\t\tcontent: `<div>\n\t\t\t\t\t\t\t<span>${response.rows[0].elements[i].distance.value} m</span>\n\t\t\t\t\t\t</div>`,\n\t\t\t\t\t\t});\n\t\t\t\t\t\todpMarker[data[i].index].infoDistance.open(googleMap, odpMarker[data[i].index]);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twindow.alert(\"Distances request failed due to \" + status);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t};\n\n\tconst mapEventListener = (): void => {\n\t\twindow.google.maps.event.addListener(autoComplete, \"place_changed\", () => {\n\t\t\tconst place = autoComplete.getPlace();\n\t\t\tif (!place.geometry) {\n\t\t\t\talert(\"Quota exceeded!\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { location, viewport } = place.geometry;\n\t\t\tif (viewport) {\n\t\t\t\tgoogleMap.fitBounds(place.geometry.viewport);\n\t\t\t} else {\n\t\t\t\tgoogleMap.setCenter(place.geometry.location);\n\t\t\t\tgoogleMap.setZoom(16);\n\t\t\t}\n\n\t\t\tgetLocation(location.lat(), location.lng());\n\t\t});\n\n\t\tmarker.addListener(\"click\", (): void => {\n\t\t\tif (!infoWindow.getMap()) {\n\t\t\t\tinfoWindow.open(googleMap, marker);\n\t\t\t}\n\t\t});\n\n\t\tmarker.addListener(\"mouseover\", (): void => {\n\t\t\todpMarker.map((x) => x.infoWindow.close());\n\t\t\tinfoWindow.open(googleMap, marker);\n\t\t});\n\n\t\tmarker.addListener(\"dragstart\", (): void => {\n\t\t\tinfoWindow.close();\n\t\t});\n\n\t\tmarker.addListener(\"dragend\", (): void => {\n\t\t\tconst location = marker.getPosition();\n\n\t\t\tinfoWindow.setContent(`<div id=\"map-popup\">Fetching data...</div>`);\n\t\t\tinfoWindow.open(googleMap, marker);\n\n\t\t\tpolygon.setMap(null);\n\t\t\tgetLocation(location.lat(), location.lng());\n\t\t});\n\n\t\tgoogleMap.addListener(\"click\", (e: any): void => {\n\t\t\tif (inputRef.current) inputRef.current.value = \"\";\n\t\t\tgetLocation(e.latLng.lat(), e.latLng.lng());\n\t\t});\n\n\t\tinputLatLng.current.addEventListener(\"submit\", (e: Event): void => {\n\t\t\te.preventDefault();\n\n\t\t\tconst element = inputLatLng.current.querySelectorAll(\"input\");\n\t\t\tconst location = {\n\t\t\t\tlat: parseFloat(element[0].value) || 0,\n\t\t\t\tlng: parseFloat(element[1].value) || 0,\n\t\t\t};\n\n\t\t\tgetLocation(location.lat, location.lng);\n\t\t});\n\t};\n\n\tconst findMe = () => {\n\t\tif (navigator.geolocation) {\n\t\t\tnavigator.geolocation.getCurrentPosition(\n\t\t\t\t({ coords }) => {\n\t\t\t\t\tif (inputRef.current) inputRef.current.value = \"\";\n\t\t\t\t\tconst position = {\n\t\t\t\t\t\tlat: coords.latitude,\n\t\t\t\t\t\tlng: coords.longitude,\n\t\t\t\t\t};\n\n\t\t\t\t\tgoogleMap.setCenter(position);\n\t\t\t\t\tgoogleMap.setZoom(17);\n\t\t\t\t\tgetLocation(coords.latitude, coords.longitude);\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\talert(\"The Geolocation service failed.\");\n\t\t\t\t},\n\t\t\t);\n\t\t} else {\n\t\t\talert(\"Your browser doesn't support geolocation.\");\n\t\t}\n\t};\n\n\tconst onChangeLat = (value?: string): void => {\n\t\tconst regex = /^[0-9.-]*$/;\n\t\tif (regex.test(value)) {\n\t\t\tsetInputLat(value);\n\t\t}\n\t};\n\tconst onChangeLng = (value?: string): void => {\n\t\tconst regex = /^[0-9.-]*$/;\n\t\tif (regex.test(value)) {\n\t\t\tsetInputLng(value);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"map-page\">\n\t\t\t<div className=\"map-container\" ref={mapRef} />\n\t\t\t<div className=\"map-search-bar\">\n\t\t\t\t<div className=\"map-search-option\">\n\t\t\t\t\t<div onClick={() => setSearchName(true)} className={searchName ? \"active\" : \"\"}>\n\t\t\t\t\t\tSearch by name\n\t\t\t\t\t</div>\n\t\t\t\t\t<div onClick={() => setSearchName(false)} className={searchName ? \"\" : \"active\"}>\n\t\t\t\t\t\tSearch by latlong\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<input id=\"map-search-name\" ref={inputRef} placeholder=\"Search here...\" style={{ display: searchName ? \"inline-block\" : \"none\" }} />\n\t\t\t\t<form ref={inputLatLng} style={{ display: !searchName ? \"block\" : \"none\" }}>\n\t\t\t\t\t<input placeholder=\"Latitude\" value={inputLat} onChange={(e) => onChangeLat(e.target.value)} />\n\t\t\t\t\t<br />\n\t\t\t\t\t<input placeholder=\"Longitude\" value={inputLng} onChange={(e) => onChangeLng(e.target.value)} />\n\t\t\t\t\t<button type=\"submit\">Search</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<div className=\"map-find-me\" onClick={findMe}>\n\t\t\t\t<img src={my_location} alt=\"find_me\" />\n\t\t\t</div>\n\t\t\t<div className=\"map-radius-slider\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tref={radiusRef}\n\t\t\t\t\tmin=\"100\"\n\t\t\t\t\tmax=\"300\"\n\t\t\t\t\tstep=\"25\"\n\t\t\t\t\tvalue={inputRadius}\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetInputRadius(e.target.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<span>Radius: {inputRadius}</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\ndeclare global {\n\tinterface Window {\n\t\tgoogle: any;\n\t}\n}\n\ninterface Attributes {\n\tdevice_id: number;\n\tdevicename: string;\n\tlat: number;\n\tlong: number;\n\tstatus_occ_add: string;\n\tportidlenumber: number;\n\tdeviceportnumber: number;\n}\ninterface ODP {\n\tattributes: Attributes;\n}\n\nexport default MapComponent;\n"],"sourceRoot":""}